{
  "type": "output",
  "name": "stringSum",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "String"
      ],
      "suggestedBloqs": [
        "string",
        "selectVariable"
      ],
<<<<<<< Updated upstream
      "name": "37eb0d05-c625-49f8-ad4b-0788c051a1f5"
=======
      "name": "cfa442a9-a5a0-4f00-ae25-33dfaf6d597f"
>>>>>>> Stashed changes
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "String"
      ],
      "suggestedBloqs": [
        "string",
        "selectVariable"
      ],
<<<<<<< Updated upstream
      "name": "0a46c149-8e3c-4e39-b4af-6a72e62d556c"
=======
      "name": "74f9e73a-08ab-4dc7-bed6-b6bb14dcda85"
>>>>>>> Stashed changes
    }
  ],
  "bloqClass": "bloq-string-sum",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "String"
        ],
        "suggestedBloqs": [
          "string",
          "selectVariable"
        ],
<<<<<<< Updated upstream
        "name": "37eb0d05-c625-49f8-ad4b-0788c051a1f5"
=======
        "name": "cfa442a9-a5a0-4f00-ae25-33dfaf6d597f"
>>>>>>> Stashed changes
      },
      {
        "alias": "text",
        "value": "+"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "String"
        ],
        "suggestedBloqs": [
          "string",
          "selectVariable"
        ],
<<<<<<< Updated upstream
        "name": "0a46c149-8e3c-4e39-b4af-6a72e62d556c"
=======
        "name": "74f9e73a-08ab-4dc7-bed6-b6bb14dcda85"
>>>>>>> Stashed changes
      }
    ]
  ],
  "code": "String({ARG1})+String({ARG2})",
  "returnType": {
    "type": "simple",
    "value": "String"
  },
  "arduino": {
    "code": "String({ARG1})+String({ARG2})"
  },
  "python": {
    "codeLines": [
      {
        "code": "Bloque \"stringSum\" no preparado para generar c√≥digo python"
      }
    ]
  }
}