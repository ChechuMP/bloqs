{
  "type": "statement",
  "name": "analogWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
<<<<<<< Updated upstream
      "name": "455e3bd8-72ae-4543-afd6-2782139aaf1e"
=======
      "name": "cc47a7f7-697a-4225-9d9e-aae521accedf"
>>>>>>> Stashed changes
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "pinLevels",
        "number",
        "selectVariable"
      ],
<<<<<<< Updated upstream
      "name": "b30247af-f148-4d60-9f77-304f1405a78c"
=======
      "name": "4ec1401e-059b-43fe-bd28-27f9fd11fac1"
>>>>>>> Stashed changes
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-analog-write-V1"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
<<<<<<< Updated upstream
        "name": "455e3bd8-72ae-4543-afd6-2782139aaf1e"
=======
        "name": "cc47a7f7-697a-4225-9d9e-aae521accedf"
>>>>>>> Stashed changes
      },
      {
        "alias": "text",
        "value": "bloq-pin-analog-write-data-V1"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "pinLevels",
          "number",
          "selectVariable"
        ],
<<<<<<< Updated upstream
        "name": "b30247af-f148-4d60-9f77-304f1405a78c"
=======
        "name": "4ec1401e-059b-43fe-bd28-27f9fd11fac1"
>>>>>>> Stashed changes
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogWrite({PIN},{DATA});'.replace(/\"/g, '') : 'analogWrite({PIN},{DATA});'",
  "arduino": {
    "code": "analogWrite(¬{PIN.formatPin}, {DATA});"
  },
  "python": {
    "codeLines": [
      {
        "code": "Bloque \"analogWrite\" no preparado para generar código python"
      }
    ]
  }
}