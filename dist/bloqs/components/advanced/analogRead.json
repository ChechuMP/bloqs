{
  "type": "output",
  "name": "analogReadAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "string",
        "selectVariable"
      ],
<<<<<<< Updated upstream
      "name": "286baf43-da4f-43f2-9209-2e3d7b5db07f"
=======
      "name": "71c778b8-2e00-415f-95b6-9d89755fd8b4"
>>>>>>> Stashed changes
    }
  ],
  "bloqClass": "bloq-analog-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-analog-read-advanced-readpin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "string",
          "selectVariable"
        ],
<<<<<<< Updated upstream
        "name": "286baf43-da4f-43f2-9209-2e3d7b5db07f"
=======
        "name": "71c778b8-2e00-415f-95b6-9d89755fd8b4"
>>>>>>> Stashed changes
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogRead({PIN})'.replace(/\"/g, '') : 'analogRead({PIN})'",
  "returnType": {
    "type": "simple",
    "value": "float"
  },
  "arduino": {
    "code": "analogRead(¬{PIN.formatPin})"
  },
  "python": {
    "codeLines": [
      {
        "code": "Bloque \"analogReadAdvanced\" no preparado para generar código python"
      }
    ]
  }
}