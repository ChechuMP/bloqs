db.bitbloq_Bloqs.remove({});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "botbloqVehicleMove",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-botbloq-vehicle-move",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Avanzar",
            "value": "forward"
          },
          {
            "label": "Retroceder",
            "value": "backward"
          },
          {
            "label": "Girar a la derecha",
            "value": "right"
          },
          {
            "label": "Girar a la izquierda",
            "value": "left"
          }
        ]
      },
      {
        "alias": "text",
        "value": "durante"
      },
      {
        "id": "DELAY",
        "alias": "numberInput",
        "value": 1000
      },
      {
        "alias": "text",
        "value": "ms a una velocidad de"
      },
      {
        "id": "SPEED",
        "alias": "numberInput",
        "value": 5
      }
    ]
  ],
  "code": "",
  "python": {
    "libraries": [
      "botbloqVehicle"
    ],
    "needInstanceOf": [
      {
        "name": "vehicle",
        "type": "BotbloqVehicle"
      }
    ],
    "codeLines": [
      {
        "conditional": {
          "aliasId": "MOVEMENT",
          "code": {
            "forward": "vehicle.avanzar({DELAY},{SPEED})",
            "backward": "vehicle.retroceder({DELAY},{SPEED})",
            "right": "vehicle.girarDerecha({DELAY},{SPEED})",
            "left": "vehicle.girarIzquierda({DELAY},{SPEED})"
          }
        }
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "botbloqVehicleStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-botbloq-vehicle-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar"
      }
    ]
  ],
  "code": "",
  "python": {
    "libraries": [
      "botbloqVehicle"
    ],
    "needInstanceOf": [
      {
        "name": "vehicle",
        "type": "BotbloqVehicle"
      }
    ],
    "codeLines": [
      {
        "code": "botbloqVehicle.parar()"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayClassVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-array-class-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-array-class-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{VAR}[{POSITION}]",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "pointer": "true",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "classChildren",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-class-children",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-class"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      },
      {
        "alias": "text",
        "value": "bloq-class-inheritance-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-class-inheritance-public",
            "value": "public"
          },
          {
            "label": "bloq-class-inheritance-protected",
            "value": "protected"
          },
          {
            "label": "bloq-class-inheritance-private",
            "value": "private"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-class-from"
      },
      {
        "id": "PARENT",
        "alias": "dynamicDropdown",
        "options": "classes"
      }
    ]
  ],
  "createDynamicContent": "classes",
  "code": "class {NAME} : public {PARENT}{{STATEMENTS}};",
  "hCode": "class {NAME}: public {PARENT}{{STATEMENTS}};",
  "cppCode": "",
  "returnType": {
    "type": "simple",
    "value": "class"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "constructorClassArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "argument",
        "arguments",
        "number",
        "string",
        "selectVariable"
      ],
      "name": "6ac4d62f-1fc8-4f64-b5b0-d65fdd62a41a"
    }
  ],
  "bloqClass": "bloq-constructor-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-constructor-arguments"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "argument",
          "arguments",
          "number",
          "string",
          "selectVariable"
        ],
        "name": "6ac4d62f-1fc8-4f64-b5b0-d65fdd62a41a"
      }
    ]
  ],
  "code": "{CLASS-OUTSIDE} ({ARGS}){{STATEMENTS}};",
  "hCode": "{CLASS-OUTSIDE} ({ARGS});",
  "cppCode": "{CLASS-OUTSIDE} :: {CLASS-OUTSIDE} ({ARGS}){{STATEMENTS}};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeArgumentsClass",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "arguments",
        "number",
        "string",
        "selectVariable"
      ],
      "name": "f9053a09-3736-4366-8ef4-a62f8cda6da5"
    }
  ],
  "bloqClass": "bloq-invoke-arguments-class",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-arguments-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "classes"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-arguments-class-name"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-arguments-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "arguments",
          "number",
          "string",
          "selectVariable"
        ],
        "name": "f9053a09-3736-4366-8ef4-a62f8cda6da5"
      }
    ]
  ],
  "createDynamicContent": "objects",
  "code": "{CLASS} {NAME}({ARGS});",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeClassFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "arguments",
        "number",
        "string",
        "selectVariable"
      ],
      "name": "7acb1941-2a5d-4a90-8d04-43c79cb21275"
    }
  ],
  "bloqClass": "bloq-invoke-class-function-args",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "arguments",
          "number",
          "string",
          "selectVariable"
        ],
        "name": "7acb1941-2a5d-4a90-8d04-43c79cb21275"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}({ARGS});",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeClassReturnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "arguments",
        "number",
        "string",
        "selectVariable"
      ],
      "name": "1a5840a9-a08d-4b51-bb08-bf06afe8a693"
    }
  ],
  "bloqClass": "bloq-invoke-class-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-args-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-args-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-args-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "arguments",
          "number",
          "string",
          "selectVariable"
        ],
        "name": "1a5840a9-a08d-4b51-bb08-bf06afe8a693"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}({ARGS});",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "private",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-private",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-private"
      }
    ]
  ],
  "code": "private : {STATEMENTS}",
  "hCode": "private : {STATEMENTS}",
  "cppCode": ""
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "protected",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-protected",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-protected"
      }
    ]
  ],
  "code": "protected : {STATEMENTS}",
  "hCode": "protected : {STATEMENTS}",
  "cppCode": ""
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "public",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-public",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-public"
      }
    ]
  ],
  "code": "public : {STATEMENTS}",
  "hCode": "public : {STATEMENTS}",
  "cppCode": ""
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setClassArrayVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "pointer": "true",
        "options": "softwareVars"
      },
      "suggestedBloqs": [
        "number",
        "basicOperations",
        "string",
        "stringSum"
      ],
      "name": "ae52a673-219f-4140-aa5e-944060a9dbf9"
    }
  ],
  "bloqClass": "bloq-set-class-variableArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-class-variableArray-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "ITERATOR",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "pointer": "true",
          "options": "softwareVars"
        },
        "suggestedBloqs": [
          "number",
          "basicOperations",
          "string",
          "stringSum"
        ],
        "name": "ae52a673-219f-4140-aa5e-944060a9dbf9"
      }
    ]
  ],
  "code": "{CLASS}.{NAME}[{ITERATOR}] = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "class",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-class",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-class"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      }
    ]
  ],
  "createDynamicContent": "classes",
  "code": "class {NAME}{{STATEMENTS}};",
  "hCode": "class {NAME}{{STATEMENTS}};",
  "cppCode": "",
  "returnType": {
    "type": "simple",
    "value": "class"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "constructorClass",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-constructor",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-constructor"
      }
    ]
  ],
  "code": "{CLASS-OUTSIDE}(){{STATEMENTS}};",
  "hCode": "{CLASS-OUTSIDE} ();",
  "cppCode": "{CLASS-OUTSIDE} :: {CLASS-OUTSIDE} (){{STATEMENTS}};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "includeLib",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-include-lib",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-include-lib-exec"
      },
      {
        "id": "LIB",
        "alias": "dynamicDropdown",
        "options": "libraries"
      }
    ]
  ],
  "code": "#include \"{LIB}\";"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeClass",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-class",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "classes"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-name"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "objects",
  "code": "{CLASS} {NAME};",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeClassFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-class-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}();",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeClassReturnFunction",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-invoke-class-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}()",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "selectClassVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-select-class-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-select-class-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{VAR}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setClassVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "options": "softwareVars"
      },
      "suggestedBloqs": [
        "number",
        "basicOperations",
        "string",
        "stringSum"
      ],
      "name": "3ba574ac-a0eb-4188-b914-187421449fd6"
    }
  ],
  "bloqClass": "bloq-set-class-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-class-variable-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "options": "softwareVars"
        },
        "suggestedBloqs": [
          "number",
          "basicOperations",
          "string",
          "stringSum"
        ],
        "name": "3ba574ac-a0eb-4188-b914-187421449fd6"
      }
    ]
  ],
  "code": "{CLASS}.{NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "code",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-code",
  "content": [
    [
      {
        "id": "CODE",
        "alias": "multilineCodeInput",
        "value": "",
        "placeholder": "bloq-code-writeYourCode"
      }
    ]
  ],
  "code": "{CODE}\n",
  "arduino": {
    "code": "{CODE}\n"
  },
  "python": {
    "codeLines": [
      {
        "code": "{CODE}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "comment",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-comment",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-comment-comment"
      },
      {
        "id": "COMMENT",
        "alias": "multilineCommentInput",
        "placeholder": "bloq-comment-default"
      }
    ]
  ],
  "code": "/*\n{COMMENT}\n*/",
  "python": {
    "codeLines": [
      {
        "code": "\"\"\"{COMMENT}\"\"\""
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "enableInterrupt",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-enable-interrupt",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-enable-interrupt"
      },
      {
        "id": "FUNC",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-enable-interrupt-pin"
      },
      {
        "id": "PIN",
        "alias": "dynamicDropdown",
        "options": "varComponents"
      },
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-enable-interrupt-rising",
            "value": "RISING"
          },
          {
            "label": "bloq-enable-interrupt-falling",
            "value": "FALLING"
          },
          {
            "label": "bloq-enable-interrupt-change",
            "value": "CHANGE"
          }
        ]
      }
    ]
  ],
  "code": "enableInterrupt({PIN}, {FUNC}, {STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "convert",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "int",
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "3f24c51d-b8f2-421c-a6eb-ad3c57aff8c0"
    }
  ],
  "bloqClass": "bloq-convert",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-convert-convert"
      },
      {
        "bloqInputId": "NUMBER",
        "alias": "bloqInput",
        "acceptType": [
          "int",
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "3f24c51d-b8f2-421c-a6eb-ad3c57aff8c0"
      },
      {
        "alias": "text",
        "value": "bloq-convert-to"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-convert-dec",
            "value": "DEC"
          },
          {
            "label": "bloq-convert-hex",
            "value": "HEX"
          },
          {
            "label": "bloq-convert-oct",
            "value": "OCT"
          },
          {
            "label": "bloq-convert-bin",
            "value": "BIN"
          }
        ]
      }
    ]
  ],
  "code": "({NUMBER},{TYPE});",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "serialSend",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "34a495a9-e81d-4fd9-ae4a-5440526fe97b"
    }
  ],
  "bloqClass": "bloq-serial-send",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "bloq-serial-send-send"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "34a495a9-e81d-4fd9-ae4a-5440526fe97b"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-serial-send-println",
            "value": "println"
          },
          {
            "label": "bloq-serial-send-print",
            "value": "print"
          }
        ]
      }
    ]
  ],
  "code": "{SERIAL}.{FUNCTION}({DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "serialReceive",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-serial-receiver",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "bloq-serial-receiver-receive"
      }
    ]
  ],
  "code": "{SERIAL}.readString()",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "serialReceiveInt",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-serial-receive-number",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "bloq-serial-receiver-receive-number"
      }
    ]
  ],
  "code": "{SERIAL}.readInt()",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "serialSend-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "string",
        "number",
        "selectVariable"
      ],
      "name": "f0b0d706-8c23-4755-bfb4-257494235242"
    }
  ],
  "bloqClass": "bloq-serial-send",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "bloq-serial-send-send"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "string",
          "number",
          "selectVariable"
        ],
        "name": "f0b0d706-8c23-4755-bfb4-257494235242"
      },
      {
        "id": "LN",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-serial-send-println",
            "value": "println"
          },
          {
            "label": "bloq-serial-send-print",
            "value": "print"
          }
        ]
      }
    ]
  ],
  "code": "{SERIAL}.{LN}({DATA});",
  "arduino": {
    "includes": [
      "BitbloqSoftwareSerial.h"
    ],
    "needInstanceOf": [
      {
        "name": "{SERIAL}",
        "type": "bqSoftwareSerial",
        "arguments": [
          0,
          1,
          "[{SERIAL}.baudRate]"
        ]
      }
    ],
    "code": "{SERIAL}.{LN}({DATA});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "PTSensor",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-PTsensor",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-PTsensor"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-PTsensor-pressure",
            "value": "getPressure()"
          },
          {
            "label": "bloq-PTsensor-temperature",
            "value": "getTemperature()"
          },
          {
            "label": "bloq-PTsensor-altitude",
            "value": "getAltitude()"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-PTsensor-sensor"
      },
      {
        "id": "PTSENS",
        "alias": "dynamicDropdown",
        "options": "barometer"
      }
    ]
  ],
  "code": "{PTSENS}.{FUNCTION}",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rgbLed",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-red"
      },
      {
        "id": "RED",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-green"
      },
      {
        "id": "GREEN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-blue"
      },
      {
        "id": "BLUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LED}.setRGBcolor({RED},{GREEN},{BLUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLedFade",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rgbLed-fade",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade-red"
      },
      {
        "id": "RED",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade-green"
      },
      {
        "id": "GREEN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade-blue"
      },
      {
        "id": "BLUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LED}.crossFade({RED},{GREEN},{BLUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLedOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rgbLed-off",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed-off"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      }
    ]
  ],
  "code": "{LED}.setRGBcolor(0,0,0);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLedSimple",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rgbLed-simple",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed-simple"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-simple-color"
      },
      {
        "id": "COLOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-rgbLed-simple-white",
            "value": "255,255,255"
          },
          {
            "label": "bloq-rgbLed-simple-yellow",
            "value": "255,255,0"
          },
          {
            "label": "bloq-rgbLed-simple-orange",
            "value": "200,50,0"
          },
          {
            "label": "bloq-rgbLed-simple-red",
            "value": "255,0,0"
          },
          {
            "label": "bloq-rgbLed-simple-green",
            "value": "0,255,0"
          },
          {
            "label": "bloq-rgbLed-simple-dark-green",
            "value": "0,60,102"
          },
          {
            "label": "bloq-rgbLed-simple-blue",
            "value": "40,40,255"
          },
          {
            "label": "bloq-rgbLed-simple-dark-blue",
            "value": "0,0,255"
          },
          {
            "label": "bloq-rgbLed-simple-pink",
            "value": "255,0,255"
          }
        ]
      }
    ]
  ],
  "code": "{LED}.setRGBcolor({COLOR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "PTSensorCalibration",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-PTsensor-calibration",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-PTsensor-calibration"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 101325
      },
      {
        "alias": "text",
        "value": "bloq-PTsensor-calibration-sensor"
      },
      {
        "id": "PTSENS",
        "alias": "dynamicDropdown",
        "options": "barometer"
      }
    ]
  ],
  "code": "{PTSENS}.setSealevelPressure({VALUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLedAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "931651e6-ab21-4448-8233-10014ce9bae1"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "7bbb46d1-6f7f-4c96-9491-ffc6f7556f8a"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "c50c983f-15fb-4046-a179-6c2ab1b5f17d"
    }
  ],
  "bloqClass": "bloq-rgbLed-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-red"
      },
      {
        "bloqInputId": "RED",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "931651e6-ab21-4448-8233-10014ce9bae1"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-green"
      },
      {
        "bloqInputId": "GREEN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "7bbb46d1-6f7f-4c96-9491-ffc6f7556f8a"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-blue"
      },
      {
        "bloqInputId": "BLUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "c50c983f-15fb-4046-a179-6c2ab1b5f17d"
      }
    ]
  ],
  "code": "{LED}.setRGBcolor({RED},{GREEN},{BLUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "analogReadAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "d497fae1-7949-4bad-9498-70932203dd84"
    }
  ],
  "bloqClass": "bloq-analog-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-analog-read-advanced-readpin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "d497fae1-7949-4bad-9498-70932203dd84"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogRead({PIN})'.replace(/\"/g, '') : 'analogRead({PIN})'",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "analogWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "0a59872f-8fee-4b20-88d2-ea0d6485fed6"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "pinLevels",
        "number",
        "selectVariable"
      ],
      "name": "5cebcd30-20dc-4cb3-b164-7e05efdc3286"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-analog-write-V1"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "0a59872f-8fee-4b20-88d2-ea0d6485fed6"
      },
      {
        "alias": "text",
        "value": "bloq-pin-analog-write-data-V1"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "pinLevels",
          "number",
          "selectVariable"
        ],
        "name": "5cebcd30-20dc-4cb3-b164-7e05efdc3286"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogWrite({PIN},{DATA});'.replace(/\"/g, '') : 'analogWrite({PIN},{DATA});'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "buzzerAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "539cd128-bbeb-47c1-8e6f-be29a6bb26dd"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "36106bfe-c63c-4a17-a28e-4b03113d4d3c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "6f9190f5-7a87-4801-8a51-d78264d86859"
    }
  ],
  "bloqClass": "bloq-buzzer-advance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-sound"
      },
      {
        "bloqInputId": "BUZZER",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "539cd128-bbeb-47c1-8e6f-be29a6bb26dd"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-note"
      },
      {
        "bloqInputId": "NOTE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "36106bfe-c63c-4a17-a28e-4b03113d4d3c"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-for"
      },
      {
        "bloqInputId": "SECONDS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "6f9190f5-7a87-4801-8a51-d78264d86859"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStartAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "fe253632-16ce-45e4-82e1-df56a058071c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "fadd118e-34d6-4737-b089-d88432a82e0f"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-turn"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "fe253632-16ce-45e4-82e1-df56a058071c"
      },
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-direction"
      },
      {
        "bloqInputId": "DIRECTION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "fadd118e-34d6-4737-b089-d88432a82e0f"
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStopAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "d4d74401-51c0-4e1d-b4b2-f074fd7dc38b"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-stop-advanced-stop"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "d4d74401-51c0-4e1d-b4b2-f074fd7dc38b"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "digitalReadAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "508150d4-725d-4286-9ee3-71c26f2ed14b"
    }
  ],
  "bloqClass": "bloq-digital-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-digital-read-advanced-readpin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "508150d4-725d-4286-9ee3-71c26f2ed14b"
      }
    ]
  ],
  "code": "digitalRead({PIN})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "digitalWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "50547e6d-6071-43cc-b2f6-959ca878fedf"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "pinLevels",
        "number",
        "selectVariable"
      ],
      "name": "e36c9f79-1057-4fe1-a8b4-208b138c651d"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-digital-write"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "50547e6d-6071-43cc-b2f6-959ca878fedf"
      },
      {
        "alias": "text",
        "value": "bloq-pin-digital-write-data-V1"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "pinLevels",
          "number",
          "selectVariable"
        ],
        "name": "e36c9f79-1057-4fe1-a8b4-208b138c651d"
      }
    ]
  ],
  "code": "digitalWrite({PIN},{DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdTurnOnOffAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "bf6e9b8a-9543-45d3-bc23-a53d289d3c2c"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-off-advanced",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-lcd-turn-on-off-advanced-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-lcd-turn-on-off-advanced-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-lcd-turn-on-off-advanced-lcdLigth"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "bf6e9b8a-9543-45d3-bc23-a53d289d3c2c"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWriteAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "string",
        "selectVariable"
      ],
      "name": "6d7b68ea-b2f4-4cf0-991d-1c822441ff91"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "e968b0d1-4a5f-4587-bc7f-ef2b1e2c1c7d"
    }
  ],
  "bloqClass": "bloq-lcd-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-write"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "string",
          "selectVariable"
        ],
        "name": "6d7b68ea-b2f4-4cf0-991d-1c822441ff91"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inLCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "e968b0d1-4a5f-4587-bc7f-ef2b1e2c1c7d"
      }
    ]
  ],
  "code": "{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWritePositionAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "string",
        "selectVariable"
      ],
      "name": "d15b5539-8304-42a6-a3cf-086a80890987"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "858cda97-4acf-42e3-be24-ae772854f34c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "53ce7540-cbb2-40a7-8d64-9abdf74cc180"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "141860e9-9ebe-400f-969d-0ddcf4d0827e"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "string",
          "selectVariable"
        ],
        "name": "d15b5539-8304-42a6-a3cf-086a80890987"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "858cda97-4acf-42e3-be24-ae772854f34c"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inPosition"
      },
      {
        "bloqInputId": "COLUMN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "53ce7540-cbb2-40a7-8d64-9abdf74cc180"
      },
      {
        "bloqInputId": "ROW",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "141860e9-9ebe-400f-969d-0ddcf4d0827e"
      }
    ]
  ],
  "code": "{LCD}.setCursor({COLUMN},{ROW});{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "ledAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "ae1ddd1c-332d-4b8a-9ac9-c96698933bbb"
    }
  ],
  "bloqClass": "bloq-led-advanced",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-led-advanced-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-led-advanced-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-led-advanced-theLED"
      },
      {
        "bloqInputId": "LED",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "ae1ddd1c-332d-4b8a-9ac9-c96698933bbb"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "6c79f7d4-a2e0-4c15-b44c-f6f56a4b11bb"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "32508a7d-e3ac-4414-8402-266938ed53fd"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "e60b8206-94a6-46e9-9407-ae33617f50cc"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "337f6e70-8188-44f8-9e98-311b50fcca65"
    }
  ],
  "bloqClass": "bloq-oscillator-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-oscillate"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "6c79f7d4-a2e0-4c15-b44c-f6f56a4b11bb"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-around"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "32508a7d-e3ac-4414-8402-266938ed53fd"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-amplitude"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "e60b8206-94a6-46e9-9407-ae33617f50cc"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-speed"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "337f6e70-8188-44f8-9e98-311b50fcca65"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});\n{OSCILLATOR}.SetA({AMPLITUDE});\n{OSCILLATOR}.SetT({SPEED});\n{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStartAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "c52e2749-435f-4bf5-b634-391796d0e7f2"
    }
  ],
  "bloqClass": "bloq-oscillator-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-start-advanced-oscillator"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "c52e2749-435f-4bf5-b634-391796d0e7f2"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStopAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "cd70b635-0e9f-42bc-8a44-7f84f2986c2d"
    }
  ],
  "bloqClass": "bloq-oscillator-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-stop-advanced-stop"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "cd70b635-0e9f-42bc-8a44-7f84f2986c2d"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop()"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "pinLevels",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-pinlevels",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-pinlevel-high",
            "value": "HIGH"
          },
          {
            "label": "bloq-pinlevel-low",
            "value": "LOW"
          }
        ]
      }
    ]
  ],
  "code": "{STATE}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servoNormalAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "hwVariable",
        "selectVariable"
      ],
      "name": "21f37885-8994-4987-abbf-dc8388a6aa57"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "6e200f9f-bde9-42d3-a14a-5a5c7b9f2d37"
    }
  ],
  "bloqClass": "bloq-servo-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-servo-advanced-move"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "hwVariable",
          "selectVariable"
        ],
        "name": "21f37885-8994-4987-abbf-dc8388a6aa57"
      },
      {
        "alias": "text",
        "value": "bloq-servo-advanced-to"
      },
      {
        "bloqInputId": "POSITION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "6e200f9f-bde9-42d3-a14a-5a5c7b9f2d37"
      },
      {
        "alias": "text",
        "value": "bloq-servo-advanced-degrees"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servoAttach",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo-attach",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-servo-attach"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "allServos"
      }
    ]
  ],
  "code": "{SERVO}.attach({SERVO.pin});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servoDetach",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo-detach",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-servo-detach"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "allServos"
      }
    ]
  ],
  "code": "{SERVO}.detach();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "buzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-buzzer-sound"
      },
      {
        "id": "BUZZER",
        "alias": "dynamicDropdown",
        "options": "buzzers"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-note"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-buzzer-do",
            "value": "261"
          },
          {
            "label": "bloq-buzzer-re",
            "value": "293"
          },
          {
            "label": "bloq-buzzer-mi",
            "value": "329"
          },
          {
            "label": "bloq-buzzer-fa",
            "value": "349"
          },
          {
            "label": "bloq-buzzer-sol",
            "value": "392"
          },
          {
            "label": "bloq-buzzer-la",
            "value": "440"
          },
          {
            "label": "bloq-buzzer-si",
            "value": "494"
          },
          {
            "label": "bloq-buzzer-do-#",
            "value": "277"
          },
          {
            "label": "bloq-buzzer-re-#",
            "value": "311"
          },
          {
            "label": "bloq-buzzer-fa-#",
            "value": "370"
          },
          {
            "label": "bloq-buzzer-sol-#",
            "value": "415"
          },
          {
            "label": "bloq-buzzer-la-#",
            "value": "466"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-for"
      },
      {
        "id": "SECONDS",
        "alias": "numberInput",
        "value": 2000
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-turn"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "continuousServos"
      },
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-direction"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-continuous-servo-start-clockwise",
            "value": "180"
          },
          {
            "label": "bloq-continuous-servo-start-counterclockwise",
            "value": "0"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-stop-stop"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "continuousServos"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStartAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-turn"
      },
      {
        "continuousServoStartAdvancedInputId": "SERVO",
        "alias": "continuousServoStartAdvancedInput",
        "acceptType": [
          "all"
        ]
      },
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-direction"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-continuous-servo-start-advanced-clockwise",
            "value": "0"
          },
          {
            "label": "bloq-continuous-servo-start-advanced-counterclockwise",
            "value": "180"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWritePositionAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "61b40b4e-800b-49f3-af92-52a8b9a9f32a"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "a2889594-f682-4418-8203-37b9d536f450"
    }
  ],
  "bloqClass": "bloq-lcd-writte deprecated",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "61b40b4e-800b-49f3-af92-52a8b9a9f32a"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "a2889594-f682-4418-8203-37b9d536f450"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inPosition"
      },
      {
        "id": "COLUMN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "id": "ROW",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LCD}.setCursor({COLUMN},{ROW});{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "pinReadAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "c1e9f9ba-d452-4983-b861-b2cafb52135c"
    }
  ],
  "bloqClass": "bloq-pin-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-read-advanced-readpin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "c1e9f9ba-d452-4983-b861-b2cafb52135c"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogRead({PIN})' : 'digitalRead({PIN})'",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "pinWriteAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "632b08f8-7f23-4770-b55f-a81b4d24fc70"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "dc63f82d-7de0-44a1-a87d-95545b3eba8d"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-writte-advanced-writepin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "632b08f8-7f23-4770-b55f-a81b4d24fc70"
      },
      {
        "alias": "text",
        "value": "bloq-pin-writte-advanced-data"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "dc63f82d-7de0-44a1-a87d-95545b3eba8d"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogWrite({PIN},{DATA});' : 'digitalWrite({PIN},{DATA});'"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "readSensorAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "bbcaae3c-04f3-47f1-bc9c-6166d3427843"
    }
  ],
  "bloqClass": "bloq-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-read-advanced-read"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "bbcaae3c-04f3-47f1-bc9c-6166d3427843"
      }
    ]
  ],
  "code": "{SENSOR.type}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "SENSOR",
    "options": "sensors"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "clockRTC",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-rtc",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rtc"
      },
      {
        "id": "RTC_FUNC",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-rtc-date",
            "value": "getDate"
          },
          {
            "label": "bloq-rtc-time",
            "value": "getTime"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-rtc-using"
      },
      {
        "id": "RTC",
        "alias": "dynamicDropdown",
        "options": "clocks"
      }
    ]
  ],
  "code": "{RTC}.{RTC_FUNC}()",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hts221Humidity",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hts221-humidity",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-hts221-humidity"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "hts221"
      }
    ]
  ],
  "code": "{SENSOR}.getHumidity()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hts221Temperature",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hts221-temperature",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-hts221-temperature"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "hts221"
      }
    ]
  ],
  "code": "{SENSOR}.getTemperature()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdClear",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-clear",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-clear"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.clear();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-off",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-lcd-turn-on-off-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-lcd-turn-on-off-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-lcd-turn-on-off-lcdLigth"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "defaultValue": "bloq-lcd-default"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.print(\"{TEXT}\");"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWritePosition",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "defaultValue": "bloq-lcd-default"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inPosition"
      },
      {
        "id": "COLUMN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "id": "ROW",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LCD}.setCursor({COLUMN},{ROW});{LCD}.print(\"{TEXT}\");"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "led",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-led",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-led-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-led-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-led-theLED"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "leds"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-oscillate"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-around"
      },
      {
        "id": "PHASE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-amplitude"
      },
      {
        "id": "AMPLITUDE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-speed"
      },
      {
        "id": "SPEED",
        "alias": "numberInput",
        "value": 2000
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});{OSCILLATOR}.SetA({AMPLITUDE});{OSCILLATOR}.SetT({SPEED});{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-start-oscillator"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.Play();{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-stop-stop"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.Stop();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorTimes",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-oscillate"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-around"
      },
      {
        "id": "PHASE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-amplitude"
      },
      {
        "id": "AMPLITUDE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-speed"
      },
      {
        "id": "SPEED",
        "alias": "numberInput",
        "value": 2000
      },
      {
        "id": "TIMES",
        "alias": "numberInput",
        "value": 2
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-times"
      }
    ]
  ],
  "code": "oscillate({OSCILLATOR}, {AMPLITUDE}, {PHASE}, {SPEED}, {TIMES});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "readSensor",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-read-sensor",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-read-read"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "sensors"
      }
    ]
  ],
  "code": "{SENSOR.type}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "SENSOR",
    "options": "sensors"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "clockRTCAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-rtc-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rtc-advanced"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-rtc-date-2",
            "value": "getDate"
          },
          {
            "label": "bloq-rtc-time-2",
            "value": "getTime"
          },
          {
            "label": "bloq-rtc-hour",
            "value": "getHour"
          },
          {
            "label": "bloq-rtc-minute",
            "value": "getMinute"
          },
          {
            "label": "bloq-rtc-second",
            "value": "getSecond"
          },
          {
            "label": "bloq-rtc-day",
            "value": "getDay"
          },
          {
            "label": "bloq-rtc-month",
            "value": "getMonth"
          },
          {
            "label": "bloq-rtc-year",
            "value": "getYear"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-rtc-using-advanced"
      },
      {
        "id": "RTC",
        "alias": "dynamicDropdown",
        "options": "clocks"
      }
    ]
  ],
  "code": "{RTC}.{FUNCTION}()",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "clockRTCInit",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rtc-init",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rtc-init"
      },
      {
        "id": "RTC",
        "alias": "dynamicDropdown",
        "options": "clocks"
      }
    ]
  ],
  "code": "{RTC}.adjust(DateTime(__DATE__, __TIME__));"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servoNormal",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-servo-move"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "servos"
      },
      {
        "alias": "text",
        "value": "bloq-servo-to"
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-servo-degrees"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "caseAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom",
      "acceptedAliases": [
        "switchChildren",
        "case"
      ]
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "case"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string"
      ],
      "name": "8b8bac4b-fbf8-4d04-9896-537fee6a8c04"
    }
  ],
  "bloqClass": "bloq-case",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-case-ifSameTo"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string"
        ],
        "name": "8b8bac4b-fbf8-4d04-9896-537fee6a8c04"
      },
      {
        "alias": "text",
        "value": "bloq-case-exec"
      }
    ]
  ],
  "code": "case {VALUE}:{STATEMENTS}break;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "elseifAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom",
      "acceptedAliases": [
        "ifDown",
        "elseifDown"
      ]
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "all",
        "elseifDown"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "equalityOperations",
        "logicOperations"
      ],
      "name": "58cf83c9-8582-42e3-b6ad-19c3eb36ca4b"
    }
  ],
  "bloqClass": "bloq-else-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-else-if-if"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "equalityOperations",
          "logicOperations"
        ],
        "name": "58cf83c9-8582-42e3-b6ad-19c3eb36ca4b"
      },
      {
        "alias": "text",
        "value": "bloq-else-if-else"
      }
    ]
  ],
  "code": "else if ({VAR}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "forAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "selectVariable"
      ],
      "name": "8599ab3f-bf9a-4ee2-ac73-927182354c4f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "2e9215dd-fa58-4bbf-99ad-3c66649d28a0"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "aecf2df4-edb1-408d-aca6-e3445a9a5099"
    }
  ],
  "bloqClass": "bloq-for",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "selectVariable"
        ],
        "name": "8599ab3f-bf9a-4ee2-ac73-927182354c4f"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "bloqInputId": "INIT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "2e9215dd-fa58-4bbf-99ad-3c66649d28a0"
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "bloqInputId": "FINAL",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "aecf2df4-edb1-408d-aca6-e3445a9a5099"
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "+"
          },
          {
            "label": "bloq-for-subtract",
            "value": "-"
          }
        ]
      },
      {
        "id": "ADD",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "'for({VAR}={INIT};{VAR}' + ('{MODE}' === '+'?'<=':'>=' ) + '{FINAL};{VAR}{MODE}={ADD}){{STATEMENTS}}'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "ifAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "all",
        "ifDown"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "equalityOperations",
        "logicOperations"
      ],
      "name": "73ca7df6-fb0b-4225-8358-2a08b7c7db88"
    }
  ],
  "bloqClass": "bloq-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-if-if"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "equalityOperations",
          "logicOperations"
        ],
        "name": "73ca7df6-fb0b-4225-8358-2a08b7c7db88"
      },
      {
        "alias": "text",
        "value": "bloq-if-exec"
      }
    ]
  ],
  "code": "if({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switchAdvanced-v2",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top",
      "acceptedAliases": [
        "switchChildren"
      ]
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "selectVariable",
        "readSensor"
      ],
      "name": "843fb7d3-c67b-4da8-a166-521e8bd33b44"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-switch-check"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "selectVariable",
          "readSensor"
        ],
        "name": "843fb7d3-c67b-4da8-a166-521e8bd33b44"
      }
    ]
  ],
  "code": "switch ({VAR}) {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "waitAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "d5f72ea4-c235-4bdf-aa8b-3628f02090f2"
    }
  ],
  "bloqClass": "bloq-wait",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-wait-wait"
      },
      {
        "bloqInputId": "TIME",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "d5f72ea4-c235-4bdf-aa8b-3628f02090f2"
      }
    ]
  ],
  "code": "delay({TIME});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "whileAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "equalityOperations",
        "logicOperations"
      ],
      "name": "42dbdaa6-0ed7-4016-b16c-088df75e030b"
    }
  ],
  "bloqClass": "bloq-while",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-while-while"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "equalityOperations",
          "logicOperations"
        ],
        "name": "42dbdaa6-0ed7-4016-b16c-088df75e030b"
      },
      {
        "alias": "text",
        "value": "bloq-while-exec"
      }
    ]
  ],
  "code": "while ({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "break",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-break",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-break-stopLoop"
      }
    ]
  ],
  "code": "break;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "case",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom",
      "acceptedAliases": [
        "switchChildren",
        "case"
      ]
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "case"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-case",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-case-ifSameTo"
      },
      {
        "id": "VAR",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-case-exec"
      }
    ]
  ],
  "code": "case {VAR}:{STATEMENTS}break;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "caseDefault",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom",
      "acceptedAliases": [
        "switchChildren",
        "case"
      ]
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-case-default",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-case-default-inOtherCase"
      }
    ]
  ],
  "code": "default:{STATEMENTS}break;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continue",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continue",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continue-continue"
      }
    ]
  ],
  "code": "continue;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "for",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-for deprecated",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "id": "INIT",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "id": "FINAL",
        "alias": "numberInput",
        "value": 10
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "++"
          },
          {
            "label": "bloq-for-subtract",
            "value": "--"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "for({VAR}={INIT};{VAR}<{FINAL};{VAR}{MODE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "forAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "fafdf840-062a-4411-933f-11c53015f18f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "c507a3a5-1733-4e36-a5c4-cc2db1920e60"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "e80f27a3-ba8b-4312-ba54-368d75602504"
    }
  ],
  "bloqClass": "bloq-for deprecated",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "fafdf840-062a-4411-933f-11c53015f18f"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "bloqInputId": "INIT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "c507a3a5-1733-4e36-a5c4-cc2db1920e60"
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "bloqInputId": "FINAL",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "e80f27a3-ba8b-4312-ba54-368d75602504"
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "++"
          },
          {
            "label": "bloq-for-subtract",
            "value": "--"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "for({VAR}={INIT};{VAR}<{FINAL};{VAR}{MODE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switchAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "7a48c0ca-5933-46ec-8322-3356f14014ff"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-switch-check"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "7a48c0ca-5933-46ec-8322-3356f14014ff"
      }
    ]
  ],
  "code": "switch (int({VAR})) {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "else",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom",
      "acceptedAliases": [
        "ifDown",
        "elseifDown"
      ]
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-else",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-else-else"
      }
    ]
  ],
  "code": "else {{STATEMENTS}}",
  "python": {
    "codeLines": [
      {
        "code": "else:"
      },
      {
        "indentation": 1,
        "code": "{STATEMENTS}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "elseif",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom",
      "acceptedAliases": [
        "ifDown",
        "elseifDown"
      ]
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "all",
        "elseifDown"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable",
        "readSensor"
      ],
      "name": "a8c85367-ef54-4d63-99a2-21ec49330dd7"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable",
        "readSensor"
      ],
      "name": "52f4c0b1-fffa-46f1-8e7e-a5680056e79e"
    }
  ],
  "bloqClass": "bloq-else-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-else-if-if"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable",
          "readSensor"
        ],
        "name": "a8c85367-ef54-4d63-99a2-21ec49330dd7"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable",
          "readSensor"
        ],
        "name": "52f4c0b1-fffa-46f1-8e7e-a5680056e79e"
      },
      {
        "alias": "text",
        "value": "bloq-else-if-else"
      }
    ]
  ],
  "code": "else if ({ARG1} {OPERATOR} {ARG2}){{STATEMENTS}}",
  "python": {
    "codeLines": [
      {
        "code": "elif({ARG1} {OPERATOR} {ARG2}):"
      },
      {
        "indentation": 1,
        "code": "{STATEMENTS}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "for-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-for",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "id": "INIT",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "id": "FINAL",
        "alias": "numberInput",
        "value": 10
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "+"
          },
          {
            "label": "bloq-for-subtract",
            "value": "-"
          }
        ]
      },
      {
        "id": "ADD",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "'for({VAR}={INIT};{VAR}' + ('{MODE}' === '+'?'<=':'>=' ) + '{FINAL};{VAR}{MODE}={ADD}){{STATEMENTS}}'",
  "arduino": {
    "conditional": {
      "aliasId": "MODE",
      "code": {
        "+": "for({VAR}={INIT};{VAR} <= {FINAL};{VAR} += {ADD}){{STATEMENTS}}",
        "-": "for({VAR}={INIT};{VAR} >= {FINAL};{VAR} -= {ADD}){{STATEMENTS}}"
      }
    }
  },
  "python": {
    "codeLines": [
      {
        "conditional": {
          "aliasId": "MODE",
          "code": {
            "+": "for {VAR} in range({INIT}, {FINAL}):",
            "-": "for {VAR} in range({FINAL}, {INIT}, -1):"
          }
        }
      },
      {
        "indentation": 1,
        "code": "{STATEMENTS}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "if",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "all",
        "ifDown"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable",
        "readSensor"
      ],
      "name": "21a3a555-c164-40b5-95e2-5f1fcad7cffc"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable",
        "readSensor"
      ],
      "name": "8bdd0274-123b-4776-aaf0-d9011096cadf"
    }
  ],
  "bloqClass": "bloq-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-if-if"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable",
          "readSensor"
        ],
        "name": "21a3a555-c164-40b5-95e2-5f1fcad7cffc"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable",
          "readSensor"
        ],
        "name": "8bdd0274-123b-4776-aaf0-d9011096cadf"
      },
      {
        "alias": "text",
        "value": "bloq-if-exec"
      }
    ]
  ],
  "code": "if({ARG1} {OPERATOR} {ARG2}){{STATEMENTS}}",
  "arduino": {
    "code": "if({ARG1} {OPERATOR} {ARG2}){{STATEMENTS}}"
  },
  "python": {
    "codeLines": [
      {
        "code": "if({ARG1} {OPERATOR} {ARG2}):"
      },
      {
        "indentation": 1,
        "code": "{STATEMENTS}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "millis",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-millis",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-millis"
      }
    ]
  ],
  "code": "millis()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switch",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top",
      "acceptedAliases": [
        "switchChildren"
      ]
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-switch-check"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "switch (int({VAR})) {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "wait",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-wait",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-wait-wait"
      },
      {
        "id": "TIME",
        "alias": "numberInput",
        "value": 2000
      },
      {
        "alias": "text",
        "value": "bloq-wait-ms"
      }
    ]
  ],
  "code": "delay({TIME});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "while",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable"
      ],
      "name": "fbb5eac7-fbf5-4ae6-a0b0-3b3658fe3b4b"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable"
      ],
      "name": "34fe6bc1-9e72-4af4-b37d-c4f636b91071"
    }
  ],
  "bloqClass": "bloq-while",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-while-while"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable"
        ],
        "name": "fbb5eac7-fbf5-4ae6-a0b0-3b3658fe3b4b"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable"
        ],
        "name": "34fe6bc1-9e72-4af4-b37d-c4f636b91071"
      },
      {
        "alias": "text",
        "value": "bloq-while-exec"
      }
    ]
  ],
  "code": "while ({ARG1} {OPERATOR} {ARG2}){{STATEMENTS}}",
  "python": {
    "codeLines": [
      {
        "code": "while ({ARG1} {OPERATOR} {ARG2}):"
      },
      {
        "indentation": 1,
        "code": "{STATEMENTS}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "numConversion",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "b65c9efd-f600-4174-8b4e-34ee43f2c1be"
    }
  ],
  "bloqClass": "bloq-num-conversion",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-num-conversion"
      },
      {
        "bloqInputId": "NUMBER",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "b65c9efd-f600-4174-8b4e-34ee43f2c1be"
      },
      {
        "alias": "text",
        "value": "bloq-num-conversion-to"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-num-conversion-int",
            "value": "int"
          },
          {
            "label": "bloq-num-conversion-float",
            "value": "float"
          }
        ]
      }
    ]
  ],
  "code": "({TYPE}) {NUMBER}",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringToInt",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "String"
      ],
      "name": "8b8e09b1-a575-47e1-8de1-08e9265f3f1d"
    }
  ],
  "bloqClass": "bloq-string-to-int",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-string-to-int"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "String"
        ],
        "name": "8b8e09b1-a575-47e1-8de1-08e9265f3f1d"
      }
    ]
  ],
  "code": "{VAR}.toInt()",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionDistance",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-distance"
      }
    ]
  ],
  "code": "evolution.getDistance()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionHeadAdvance",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "043897cf-9486-406d-a60d-ba6197699d6e"
    }
  ],
  "bloqClass": "bloq-evolution-head",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-head-advance"
      },
      {
        "bloqInputId": "DEGREES",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "043897cf-9486-406d-a60d-ba6197699d6e"
      },
      {
        "alias": "text",
        "value": "bloq-evolution-head-advance-deg"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-head-advance-left",
            "value": "HEAD_LEFT"
          },
          {
            "label": "bloq-evolution-head-advance-right",
            "value": "HEAD_RIGHT"
          }
        ]
      }
    ]
  ],
  "code": "'{SIDE}' === 'HEAD_LEFT'? 'evolution.turnHead({DEGREES});' : 'evolution.turnHead(-{DEGREES});'"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionLight",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-light",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-light"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-light-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-evolution-light-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-light-evolution"
      }
    ]
  ],
  "code": "evolution.getLight({SIDE})",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionLine",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-line",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-line"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-line-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-evolution-line-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-line-evolution"
      }
    ]
  ],
  "code": "evolution.getLine({SIDE})",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionBuzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-buzzer"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-buzzer-do",
            "value": "note_C4"
          },
          {
            "label": "bloq-evolution-buzzer-re",
            "value": "note_D4"
          },
          {
            "label": "bloq-evolution-buzzer-mi",
            "value": "note_E4"
          },
          {
            "label": "bloq-evolution-buzzer-fa",
            "value": "note_F4"
          },
          {
            "label": "bloq-evolution-buzzer-sol",
            "value": "note_G4"
          },
          {
            "label": "bloq-evolution-buzzer-la",
            "value": "note_A4"
          },
          {
            "label": "bloq-evolution-buzzer-si",
            "value": "note_B4"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-buzzer-for"
      },
      {
        "id": "SECONDS",
        "alias": "numberInput",
        "value": 1000
      },
      {
        "alias": "text",
        "value": "bloq-evolution-buzzer-ms"
      }
    ]
  ],
  "code": "evolution._tone({NOTE},{SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionHead",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-head",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-head"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-head-center",
            "value": "HEAD_CENTER"
          },
          {
            "label": "bloq-evolution-head-left",
            "value": "HEAD_LEFT"
          },
          {
            "label": "bloq-evolution-head-right",
            "value": "HEAD_RIGHT"
          }
        ]
      }
    ]
  ],
  "code": "evolution.turnHead({SIDE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionHome",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-rest",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-rest"
      }
    ]
  ],
  "code": "evolution.home();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "evolutionIfDistance",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "all",
        "ifDown"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-if-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-if-distance"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-distance-less",
            "value": "<"
          },
          {
            "label": "bloq-evolution-if-distance-more",
            "value": ">"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-distance-than"
      },
      {
        "id": "DISTANCE",
        "alias": "numberInput",
        "value": 15
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-distance-then"
      }
    ]
  ],
  "code": "if(evolution.getDistance() {OPERATOR} {DISTANCE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "evolutionIfLight",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "all",
        "ifDown"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-if-light",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-if-light"
      },
      {
        "id": "RANGELEFT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-light-high",
            "value": "HIGH_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-medium",
            "value": "MEDIUM_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-low",
            "value": "LOW_LIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-light-and"
      },
      {
        "id": "RANGERIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-light-high",
            "value": "HIGH_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-medium",
            "value": "MEDIUM_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-low",
            "value": "LOW_LIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-light-then"
      }
    ]
  ],
  "code": "if(evolution.getLightRange(LEFT,{RANGELEFT}) && evolution.getLightRange(RIGHT,{RANGERIGHT})){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "evolutionIfLine",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "all",
        "ifDown"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-if-line",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-if-line"
      },
      {
        "id": "LINELEFT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-line-white",
            "value": "1"
          },
          {
            "label": "bloq-evolution-if-line-black",
            "value": "0"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-line-and"
      },
      {
        "id": "LINERIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-line-white",
            "value": "1"
          },
          {
            "label": "bloq-evolution-if-line-black",
            "value": "0"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-line-then"
      }
    ]
  ],
  "code": "if(evolution.getLine(LEFT) == {LINELEFT} && evolution.getLine(RIGHT) == {LINERIGHT}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionMovementsSimple",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-movements-simple",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-movements-simple"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-movements-simple-fordward",
            "value": "fordward"
          },
          {
            "label": "bloq-evolution-movements-simple-backward",
            "value": "backward"
          },
          {
            "label": "bloq-evolution-movements-simple-right",
            "value": "right"
          },
          {
            "label": "bloq-evolution-movements-simple-left",
            "value": "left"
          }
        ]
      }
    ]
  ],
  "code": "evolution.{MOVEMENT}();"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "argument",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-argument",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-argument-var"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-argument-int",
            "value": "int"
          },
          {
            "label": "bloq-argument-float",
            "value": "float"
          },
          {
            "label": "bloq-argument-string",
            "value": "String"
          },
          {
            "label": "bloq-argument-char",
            "value": "char"
          },
          {
            "label": "bloq-argument-bool",
            "value": "bool"
          }
        ]
      },
      {
        "id": "VARNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{TYPE} {VARNAME}",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "argument",
        "arguments",
        "number",
        "string",
        "selectVariable"
      ],
      "name": "f27072aa-4c91-4e07-a1bd-14f7d84a37a8"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "argument",
        "arguments",
        "number",
        "string",
        "selectVariable"
      ],
      "name": "d09d75bf-091c-4f26-adbb-b4bada4c0fb3"
    }
  ],
  "bloqClass": "bloq-arguments",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "argument",
          "arguments",
          "number",
          "string",
          "selectVariable"
        ],
        "name": "f27072aa-4c91-4e07-a1bd-14f7d84a37a8"
      },
      {
        "alias": "text",
        "value": ","
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "argument",
          "arguments",
          "number",
          "string",
          "selectVariable"
        ],
        "name": "d09d75bf-091c-4f26-adbb-b4bada4c0fb3"
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{ARG1},{ARG2}",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable",
        "arguments"
      ],
      "name": "4378e555-bb4c-4df9-8894-37a8696fcc7d"
    }
  ],
  "bloqClass": "bloq-invoke-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-function-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable",
          "arguments"
        ],
        "name": "4378e555-bb4c-4df9-8894-37a8696fcc7d"
      }
    ]
  ],
  "code": "{FUNCTION}({ARGS});",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeReturnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable",
        "arguments"
      ],
      "name": "4d9f75c6-4f76-482f-8d02-a6a1843a0e84"
    }
  ],
  "bloqClass": "bloq-invoke-return-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-return-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-function-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable",
          "arguments"
        ],
        "name": "4d9f75c6-4f76-482f-8d02-a6a1843a0e84"
      }
    ]
  ],
  "code": "{FUNCTION}({ARGS})",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "return",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "selectVariable",
        "logicOperations",
        "equalityOperations"
      ],
      "name": "6b3edfd3-2d96-4113-b028-d9a101381a74"
    }
  ],
  "bloqClass": "bloq-return",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-return-return"
      },
      {
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "selectVariable",
          "logicOperations",
          "equalityOperations"
        ],
        "name": "6b3edfd3-2d96-4113-b028-d9a101381a74"
      }
    ]
  ],
  "code": "return {RETURN};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "argument",
        "arguments",
        "number",
        "string",
        "selectVariable"
      ],
      "name": "83c45d38-0c4d-4c46-b284-e659907769ca"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "selectVariable",
        "logicOperations",
        "equalityOperations"
      ],
      "name": "1a9efc7e-4e20-473a-87bf-bc85cc2ed1e0"
    }
  ],
  "bloqClass": "bloq-return-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-return-function-with-arguments-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      },
      {
        "alias": "text",
        "value": "bloq-return-function-with-arguments-count"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "argument",
          "arguments",
          "number",
          "string",
          "selectVariable"
        ],
        "name": "83c45d38-0c4d-4c46-b284-e659907769ca"
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "bloq-return-function-with-arguments-return"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "selectVariable",
          "logicOperations",
          "equalityOperations"
        ],
        "name": "1a9efc7e-4e20-473a-87bf-bc85cc2ed1e0"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "RETURN"
  },
  "arguments": {
    "type": "fromInput",
    "bloqInputId": "ARGS"
  },
  "code": "{RETURN.connectionType} {FUNCNAME} ({ARGS}) {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "argument",
        "arguments",
        "number",
        "string",
        "selectVariable"
      ],
      "name": "e58cfba4-9cab-4604-96f3-69969b9a45fa"
    }
  ],
  "bloqClass": "bloq-void-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-void-function-with-arguments-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      },
      {
        "alias": "text",
        "value": "bloq-void-function-with-arguments-count"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "argument",
          "arguments",
          "number",
          "string",
          "selectVariable"
        ],
        "name": "e58cfba4-9cab-4604-96f3-69969b9a45fa"
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "arguments": {
    "type": "fromInput",
    "bloqInputId": "ARGS"
  },
  "code": "void {FUNCNAME} ({ARGS}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}();",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  },
  "python": {
    "codeLines": [
      {
        "code": "{FUNCTION}()"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeReturnFunction",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-invoke-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-return-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}()",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  },
  "python": {
    "codeLines": [
      {
        "code": "{FUNCTION}()"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "selectVariable",
        "logicOperations",
        "equalityOperations"
      ],
      "name": "699c49f4-c3f4-444e-82aa-263ce61c603c"
    }
  ],
  "bloqClass": "bloq-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-return-function-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "bloq-return-function-return"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "selectVariable",
          "logicOperations",
          "equalityOperations"
        ],
        "name": "699c49f4-c3f4-444e-82aa-263ce61c603c"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "RETURN"
  },
  "code": "{RETURN.connectionType} {FUNCNAME} () {{STATEMENTS}return {RETURN};}",
  "python": {
    "codeLines": [
      {
        "code": "def {FUNCNAME}():"
      },
      {
        "indentation": 1,
        "code": "{STATEMENTS}"
      },
      {
        "indentation": 1,
        "code": "return {RETURN}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-void-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-void-function-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "code": "void {FUNCNAME} (){{STATEMENTS}}",
  "python": {
    "codeLines": [
      {
        "code": "def {FUNCNAME}():"
      },
      {
        "indentation": 1,
        "code": "{STATEMENTS}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "name": "group",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolArrayAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "acaf9226-a25a-4462-ae2d-4781054f3785"
    }
  ],
  "bloqClass": "bloq-boolArray-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-boolArray-advanced-arraySize"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "acaf9226-a25a-4462-ae2d-4781054f3785"
      },
      {
        "alias": "text",
        "value": "bloq-boolArray-advanced-boolType"
      }
    ]
  ],
  "code": "(bool *)malloc({VALUE}*sizeof(bool))",
  "returnType": {
    "type": "simple",
    "value": "bool *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolArray",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-boolArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-boolArray-arraySize"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-boolArray-boolType"
      }
    ]
  ],
  "code": "(bool *)malloc({VALUE}*sizeof(bool))",
  "returnType": {
    "type": "simple",
    "value": "bool *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolean",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-boolean",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-boolean-true",
            "value": "true"
          },
          {
            "label": "bloq-boolean-false",
            "value": "false"
          }
        ]
      }
    ]
  ],
  "code": "{STATE}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "equalityOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable",
        "readSensor"
      ],
      "name": "41fc437d-bb6c-4870-9301-3516d35ca564"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable",
        "readSensor"
      ],
      "name": "73ac77ef-032d-4de3-b33d-1d34f6e2be1d"
    }
  ],
  "bloqClass": "bloq-equality-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable",
          "readSensor"
        ],
        "name": "41fc437d-bb6c-4870-9301-3516d35ca564"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable",
          "readSensor"
        ],
        "name": "73ac77ef-032d-4de3-b33d-1d34f6e2be1d"
      }
    ]
  ],
  "code": "({ARG1} {OPERATOR} {ARG2})",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "logicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "selectVariable",
        "equalityOperations",
        "logicOperations"
      ],
      "name": "c0864c3a-b41e-473d-bfd5-832832f4fc70"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "selectVariable",
        "equalityOperations",
        "logicOperations"
      ],
      "name": "28b54982-b400-4274-a256-af6002a1fc01"
    }
  ],
  "bloqClass": "bloq-logic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "selectVariable",
          "equalityOperations",
          "logicOperations"
        ],
        "name": "c0864c3a-b41e-473d-bfd5-832832f4fc70"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-logic-operations-and",
            "value": "&&"
          },
          {
            "label": "bloq-logic-operations-or",
            "value": "||"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "selectVariable",
          "equalityOperations",
          "logicOperations"
        ],
        "name": "28b54982-b400-4274-a256-af6002a1fc01"
      }
    ]
  ],
  "code": "({ARG1} {OPERATOR} {ARG2})",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "not",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "selectVariable"
      ],
      "name": "c88db8d4-33e9-4e6a-aeb4-0becd64a14f2"
    }
  ],
  "bloqClass": "bloq-not",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-not-not"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "selectVariable"
        ],
        "name": "c88db8d4-33e9-4e6a-aeb4-0becd64a14f2"
      }
    ]
  ],
  "code": "!{CONDITION}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "name": "loopBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-loop",
  "headerText": "bloq-loop-header",
  "descriptionText": "bloq-loop-description",
  "content": [],
  "code": "void loop(){{STATEMENTS}}",
  "arduino": {
    "code": "void loop(){{STATEMENTS}}"
  }
});
db.bitbloq_Bloqs.insert({
  "name": "pythonBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-python",
  "headerText": "Python Code",
  "descriptionText": "Python code come here",
  "content": [],
  "python": {
    "codeLines": [
      {
        "code": "{STATEMENTS}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "name": "setupBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-setup",
  "headerText": "bloq-setup-header",
  "descriptionText": "bloq-setup-description",
  "content": [],
  "code": "void setup(){{STATEMENTS}}",
  "arduino": {
    "code": "void setup(){{STATEMENTS}}"
  }
});
db.bitbloq_Bloqs.insert({
  "name": "varsBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-vars",
  "headerText": "bloq-var-header",
  "descriptionText": "bloq-var-description",
  "content": [],
  "code": "{STATEMENTS}",
  "arduino": {
    "code": "{STATEMENTS}"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mapAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "readSensor",
        "selectVariable"
      ],
      "name": "a7bb10dc-fd2c-4253-8a85-7124817c1b77"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "f62ff53a-1aea-4ba2-a9c0-e3941a4fb30f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "fda69e0d-6a9a-4167-9b49-0a8efcbcb2f2"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "04dd2ea0-925b-4058-b0f0-3cb255314edf"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "9405fbb3-3908-4d67-8b34-43b260e2c105"
    }
  ],
  "bloqClass": "bloq-map-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-map-advanced-map"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "readSensor",
          "selectVariable"
        ],
        "name": "a7bb10dc-fd2c-4253-8a85-7124817c1b77"
      },
      {
        "alias": "text",
        "value": "bloq-map-advanced-value"
      },
      {
        "bloqInputId": "INITMIN",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "f62ff53a-1aea-4ba2-a9c0-e3941a4fb30f"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "INITMAX",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "fda69e0d-6a9a-4167-9b49-0a8efcbcb2f2"
      },
      {
        "alias": "text",
        "value": "bloq-map-advanced-and"
      },
      {
        "bloqInputId": "FINMIN",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "04dd2ea0-925b-4058-b0f0-3cb255314edf"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "FINMAX",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "9405fbb3-3908-4d67-8b34-43b260e2c105"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},{INITMIN},{INITMAX},{FINMIN},{FINMAX})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mathOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "3738e515-d468-40ee-b0f9-f855e6383f72"
    }
  ],
  "bloqClass": "bloq-math-operations",
  "content": [
    [
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-math-operations-sqrt",
            "value": "sqrt"
          },
          {
            "label": "bloq-math-operations-abs",
            "value": "abs"
          },
          {
            "label": "ln",
            "value": "log"
          },
          {
            "label": "log10",
            "value": "log10"
          },
          {
            "label": "e^",
            "value": "exp"
          }
        ]
      },
      {
        "bloqInputId": "ARG",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "3738e515-d468-40ee-b0f9-f855e6383f72"
      }
    ]
  ],
  "code": "{OPERATOR}({ARG})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "numberArrayAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "03112113-1fc4-4237-81c4-cfca33feb1eb"
    }
  ],
  "bloqClass": "bloq-numberArray-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-numberArray-advanced-arraySize"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "03112113-1fc4-4237-81c4-cfca33feb1eb"
      },
      {
        "alias": "text",
        "value": "bloq-numberArray-advanced-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-numberArray-advanced-float",
            "value": "float *"
          },
          {
            "label": "bloq-numberArray-advanced-int",
            "value": "int *"
          }
        ]
      }
    ]
  ],
  "code": "({TYPE})malloc({VALUE}*sizeof({TYPE}.withoutAsterisk))",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "round-v1",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "6d04dd02-af53-4e8f-a338-bf884baec20e"
    }
  ],
  "bloqClass": "bloq-round",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-round-advanced-roundto"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-round-advanced-floor",
            "value": "floor"
          },
          {
            "label": "bloq-round-advanced-ceil",
            "value": "ceil"
          },
          {
            "label": "bloq-round-advanced-round",
            "value": "round"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-round-advanced-thenumber"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "6d04dd02-af53-4e8f-a338-bf884baec20e"
      }
    ]
  ],
  "code": "{OPERATOR}({VAR})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "basicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable",
        "basicOperations"
      ],
      "name": "122c416b-aa22-4040-80be-c38dd7eee7b0"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable",
        "basicOperations"
      ],
      "name": "60c7dff1-e4df-40e3-a13c-0d01cd548e82"
    }
  ],
  "bloqClass": "bloq-basic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable",
          "basicOperations"
        ],
        "name": "122c416b-aa22-4040-80be-c38dd7eee7b0"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "+",
            "value": "+"
          },
          {
            "label": "-",
            "value": "-"
          },
          {
            "label": "x",
            "value": "*"
          },
          {
            "label": "/",
            "value": "/"
          },
          {
            "label": "^",
            "value": "^"
          },
          {
            "label": "%",
            "value": "%"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable",
          "basicOperations"
        ],
        "name": "60c7dff1-e4df-40e3-a13c-0d01cd548e82"
      }
    ]
  ],
  "code": "'{OPERATOR}' === '^'? 'pow({ARG1},{ARG2})' : '({ARG1} {OPERATOR} {ARG2})'",
  "returnType": {
    "type": "simple",
    "value": "float"
  },
  "python": {
    "codeLines": [
      {
        "conditional": {
          "aliasId": "OPERATOR",
          "code": {
            "+": "{ARG1} {OPERATOR} {ARG2}",
            "-": "{ARG1} {OPERATOR} {ARG2}",
            "*": "{ARG1} {OPERATOR} {ARG2}",
            "/": "{ARG1} {OPERATOR} {ARG2}",
            "^": "{ARG1} ** {ARG2}",
            "%": "{ARG1} {OPERATOR} {ARG2}"
          }
        }
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "map",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "readSensor",
        "selectVariable"
      ],
      "name": "b0a6f1a4-72e5-46ec-9257-aa301f8159a1"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "f60f7884-b12b-4d2e-b04d-3f3a8b176684"
    }
  ],
  "bloqClass": "bloq-map",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-map-map"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "readSensor",
          "selectVariable"
        ],
        "name": "b0a6f1a4-72e5-46ec-9257-aa301f8159a1"
      },
      {
        "alias": "text",
        "value": "bloq-map-value"
      },
      {
        "bloqInputId": "MAXVAL",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "f60f7884-b12b-4d2e-b04d-3f3a8b176684"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},0,1023,0,{MAXVAL})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "number",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-number",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "simple",
    "value": "float"
  },
  "arduino": {
    "code": "{VALUE}"
  },
  "python": {
    "codeLines": [
      {
        "code": "{VALUE}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "numberArray",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-numberArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-numberArray-arraySize"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 3
      },
      {
        "alias": "text",
        "value": "bloq-numberArray-floatType"
      }
    ]
  ],
  "code": "(float*)malloc({VALUE}*sizeof(float))",
  "returnType": {
    "type": "simple",
    "value": "float *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "random",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "710c502b-6a1e-4429-9cb3-ccb061c2e59f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "98fa526e-8fc8-41c8-afbe-2ae2dea73453"
    }
  ],
  "bloqClass": "bloq-random",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-random-random"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "710c502b-6a1e-4429-9cb3-ccb061c2e59f"
      },
      {
        "alias": "text",
        "value": "bloq-random-and"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "98fa526e-8fc8-41c8-afbe-2ae2dea73453"
      }
    ]
  ],
  "code": "random({ARG1},{ARG2}+1)",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "randomSeed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-random-seed",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-random-seed"
      }
    ]
  ],
  "code": "randomSeed(micros());",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "mBotBuzzerAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "b690d085-710f-49ff-9746-0f44c3db3c20"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "c0ea7b67-8b3a-4384-bfd6-b94d121a7c31"
    }
  ],
  "bloqClass": "bloq-mbot-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "Hacer sonar la nota"
      },
      {
        "bloqInputId": "NOTE",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "b690d085-710f-49ff-9746-0f44c3db3c20"
      },
      {
        "alias": "text",
        "value": "beat"
      },
      {
        "bloqInputId": "BEAT",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "c0ea7b67-8b3a-4384-bfd6-b94d121a7c31"
      }
    ]
  ],
  "code": "",
  "arduino": {
    "includes": [
      "BitbloqMBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.tone({NOTE},{BEAT});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "mBotMoveAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "adf1bfaf-1322-4a81-bc1c-7f07bd202615"
    }
  ],
  "bloqClass": "bloq-mbot-move",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Avanzar",
            "value": "1"
          },
          {
            "label": "Retroceder",
            "value": "2"
          },
          {
            "label": "Girar a la derecha",
            "value": "3"
          },
          {
            "label": "Girar a la izquierda",
            "value": "4"
          }
        ]
      },
      {
        "alias": "text",
        "value": "a una velocidad"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "adf1bfaf-1322-4a81-bc1c-7f07bd202615"
      }
    ]
  ],
  "code": "",
  "arduino": {
    "includes": [
      "BitbloqMBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.move({MOVEMENT},{SPEED});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "mBotSetLedAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "3c3b75d6-54e3-4c48-8388-ee4f564d1134"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "a9cc2f17-707c-4c6f-8838-73fe6f0321e4"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "142a2e16-5e9e-4ef4-8835-d941bc4048e4"
    }
  ],
  "bloqClass": "bloq-mbot-setled",
  "content": [
    [
      {
        "alias": "text",
        "value": "Establecer "
      },
      {
        "id": "LEDS",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "todos los leds",
            "value": "0"
          },
          {
            "label": "el led derecho",
            "value": "1"
          },
          {
            "label": "el led izquierdo",
            "value": "2"
          }
        ]
      },
      {
        "alias": "text",
        "value": "con esta mezcla de colores:"
      },
      {
        "alias": "text",
        "value": "rojo:"
      },
      {
        "bloqInputId": "RED",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "3c3b75d6-54e3-4c48-8388-ee4f564d1134"
      },
      {
        "alias": "text",
        "value": "verde:"
      },
      {
        "bloqInputId": "GREEN",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "a9cc2f17-707c-4c6f-8838-73fe6f0321e4"
      },
      {
        "alias": "text",
        "value": "azul:"
      },
      {
        "bloqInputId": "BLUE",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "142a2e16-5e9e-4ef4-8835-d941bc4048e4"
      }
    ]
  ],
  "code": "",
  "arduino": {
    "includes": [
      "BitbloqMBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.setLed({LEDS}, {RED}, {GREEN}, {BLUE});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "mBotBuzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-mbot-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "Hacer sonar la nota"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-buzzer-do",
            "value": "261"
          },
          {
            "label": "bloq-buzzer-re",
            "value": "293"
          },
          {
            "label": "bloq-buzzer-mi",
            "value": "329"
          },
          {
            "label": "bloq-buzzer-fa",
            "value": "349"
          },
          {
            "label": "bloq-buzzer-sol",
            "value": "392"
          },
          {
            "label": "bloq-buzzer-la",
            "value": "440"
          },
          {
            "label": "bloq-buzzer-si",
            "value": "494"
          },
          {
            "label": "bloq-buzzer-do-#",
            "value": "277"
          },
          {
            "label": "bloq-buzzer-re-#",
            "value": "311"
          },
          {
            "label": "bloq-buzzer-fa-#",
            "value": "370"
          },
          {
            "label": "bloq-buzzer-sol-#",
            "value": "415"
          },
          {
            "label": "bloq-buzzer-la-#",
            "value": "466"
          }
        ]
      },
      {
        "alias": "text",
        "value": "beat"
      },
      {
        "id": "BEAT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "doble",
            "value": "2000"
          },
          {
            "label": "entero",
            "value": "1000"
          },
          {
            "label": "medio",
            "value": "500"
          },
          {
            "label": "cuarto",
            "value": "250"
          },
          {
            "label": "octavo",
            "value": "125"
          }
        ]
      }
    ]
  ],
  "code": "",
  "arduino": {
    "includes": [
      "BitbloqMBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.tone({NOTE},{BEAT});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mBotGetDistance",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-mbot-getdistance",
  "content": [
    [
      {
        "alias": "text",
        "value": "Obtener la distancia del ultrasonidos en el"
      },
      {
        "id": "PORT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "puerto 1",
            "value": "1"
          },
          {
            "label": "puerto 2",
            "value": "2"
          },
          {
            "label": "puerto 3",
            "value": "3"
          },
          {
            "label": "puerto 4",
            "value": "4"
          }
        ]
      }
    ]
  ],
  "code": "",
  "returnType": {
    "type": "simple",
    "value": "float"
  },
  "arduino": {
    "includes": [
      "BitbloqMBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.getDistance({PORT})"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mBotGetButtonStatus",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-mbot-getbuttonstatus",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer estado del botón"
      }
    ]
  ],
  "code": "",
  "returnType": {
    "type": "simple",
    "value": "float"
  },
  "arduino": {
    "includes": [
      "BitbloqMBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.getButtonStatus()"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "mBotShowPrintText",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-mbot-printtext",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "defaultValue": "Hola"
      },
      {
        "alias": "text",
        "value": "en la pantalla conectada en el "
      },
      {
        "id": "PORT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "puerto 1",
            "value": "1"
          },
          {
            "label": "puerto 2",
            "value": "2"
          },
          {
            "label": "puerto 3",
            "value": "3"
          },
          {
            "label": "puerto 4",
            "value": "4"
          }
        ]
      },
      {
        "alias": "text",
        "value": "empezando en la posición (columna, fila)"
      },
      {
        "id": "COLUMN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "id": "ROW",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "",
  "arduino": {
    "includes": [
      "mBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.print({PORT}, {TEXT}, {COLUMN}, {ROW});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "mBotSetMotor",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-mbot-setmotor",
  "content": [
    [
      {
        "alias": "text",
        "value": "Fijar el motor "
      },
      {
        "id": "MOTOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "M1",
            "value": "M1"
          },
          {
            "label": "M2",
            "value": "M2"
          }
        ]
      },
      {
        "alias": "text",
        "value": "a una velocidad"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "muy muy rápida",
            "value": "255"
          },
          {
            "label": "muy rápida",
            "value": "100"
          },
          {
            "label": "rápida",
            "value": "50"
          },
          {
            "label": "nula",
            "value": "0"
          },
          {
            "label": "despacio",
            "value": "-50"
          },
          {
            "label": "muy despacio",
            "value": "-100"
          },
          {
            "label": "muy muy despacio",
            "value": "-255"
          }
        ]
      }
    ]
  ],
  "code": "",
  "arduino": {
    "includes": [
      "mBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.setMotor({MOTOR},{SPEED});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "mBotSetServo",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-mbot-setservo",
  "content": [
    [
      {
        "alias": "text",
        "value": "Fijar el servo en el"
      },
      {
        "id": "PORT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "puerto 1",
            "value": "1"
          },
          {
            "label": "puerto 2",
            "value": "2"
          },
          {
            "label": "puerto 3",
            "value": "3"
          },
          {
            "label": "puerto 4",
            "value": "4"
          }
        ]
      },
      {
        "alias": "text",
        "value": "y el"
      },
      {
        "id": "BANK",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "banco 1",
            "value": "1"
          },
          {
            "label": "banco 2",
            "value": "2"
          }
        ]
      },
      {
        "alias": "text",
        "value": "con un ángulo de "
      },
      {
        "id": "ANGLE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "0",
            "value": "0"
          },
          {
            "label": "45",
            "value": "45"
          },
          {
            "label": "90",
            "value": "90"
          },
          {
            "label": "135",
            "value": "135"
          },
          {
            "label": "180",
            "value": "180"
          }
        ]
      }
    ]
  ],
  "code": "",
  "arduino": {
    "includes": [
      "mBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.setServo({PORT}, {BANK}, {ANGLE});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "mBotShowFaceByNumber",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-mbot-showfacebynumber",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mostrar la cara número "
      },
      {
        "id": "FACE",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "en la pantalla conectada en el "
      },
      {
        "id": "PORT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "puerto 1",
            "value": "1"
          },
          {
            "label": "puerto 2",
            "value": "2"
          },
          {
            "label": "puerto 3",
            "value": "3"
          },
          {
            "label": "puerto 4",
            "value": "4"
          }
        ]
      }
    ]
  ],
  "code": "",
  "arduino": {
    "includes": [
      "mBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.showFaceByNumber({PORT},{FACE});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mBotGetLightSensor",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-mbot-getlightsensor",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer el sensor de luz"
      }
    ]
  ],
  "code": "",
  "returnType": {
    "type": "simple",
    "value": "float"
  },
  "arduino": {
    "includes": [
      "BitbloqMBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.getLightSensor()"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mBotLineFollower",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-mbot-linefollower",
  "content": [
    [
      {
        "alias": "text",
        "value": "Obtener la información del siguelineas en el "
      },
      {
        "id": "PORT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "puerto 1",
            "value": "1"
          },
          {
            "label": "puerto 2",
            "value": "2"
          },
          {
            "label": "puerto 3",
            "value": "3"
          },
          {
            "label": "puerto 4",
            "value": "4"
          }
        ]
      }
    ]
  ],
  "code": "",
  "returnType": {
    "type": "simple",
    "value": "float"
  },
  "arduino": {
    "includes": [
      "BitbloqMBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.getLineFollower({PORT})"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "mBotMove",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-mbot-move",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Avanzar",
            "value": "1"
          },
          {
            "label": "Retroceder",
            "value": "2"
          },
          {
            "label": "Girar a la derecha",
            "value": "3"
          },
          {
            "label": "Girar a la izquierda",
            "value": "4"
          }
        ]
      },
      {
        "alias": "text",
        "value": "a una velocidad"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "muy muy rápida",
            "value": "255"
          },
          {
            "label": "muy rápida",
            "value": "100"
          },
          {
            "label": "rápida",
            "value": "50"
          },
          {
            "label": "nula",
            "value": "0"
          },
          {
            "label": "despacio",
            "value": "-50"
          },
          {
            "label": "muy despacio",
            "value": "-100"
          },
          {
            "label": "muy muy despacio",
            "value": "-255"
          }
        ]
      }
    ]
  ],
  "code": "",
  "arduino": {
    "includes": [
      "BitbloqMBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.move({MOVEMENT},{SPEED});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "mBotSetLed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-mbot-setled",
  "content": [
    [
      {
        "alias": "text",
        "value": "Establecer "
      },
      {
        "id": "LEDS",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "todos los leds",
            "value": "0"
          },
          {
            "label": "el led derecho",
            "value": "1"
          },
          {
            "label": "el led izquierdo",
            "value": "2"
          }
        ]
      },
      {
        "alias": "text",
        "value": "con esta mezcla de colores:"
      },
      {
        "alias": "text",
        "value": "rojo:"
      },
      {
        "id": "RED",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "verde:"
      },
      {
        "id": "GREEN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "azul:"
      },
      {
        "id": "BLUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "",
  "arduino": {
    "includes": [
      "BitbloqMBot.h"
    ],
    "needInstanceOf": [
      {
        "name": "mBot",
        "type": "MBot"
      }
    ],
    "code": "mBot.setLed({LEDS}, {RED}, {GREEN}, {BLUE});"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "output",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "statement",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "statement-input",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "char",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-string",
  "content": [
    [
      {
        "alias": "text",
        "value": "'"
      },
      {
        "id": "TEXT",
        "alias": "charInput",
        "placeholder": "bloq-char"
      },
      {
        "alias": "text",
        "value": "'"
      }
    ]
  ],
  "code": "'{TEXT}'",
  "returnType": {
    "type": "simple",
    "value": "char"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringArrayAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "142440ff-533e-448c-9d57-4bbdeb202714"
    }
  ],
  "bloqClass": "bloq-stringArray-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-stringArray-advanced-arraySize"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "142440ff-533e-448c-9d57-4bbdeb202714"
      },
      {
        "alias": "text",
        "value": "bloq-stringArray-advanced-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-stringArray-advanced-string",
            "value": "String *"
          },
          {
            "label": "bloq-stringArray-advanced-char",
            "value": "char *"
          }
        ]
      }
    ]
  ],
  "code": "({TYPE})malloc({VALUE}*sizeof({TYPE}.withoutAsterisk))",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "length",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "String"
      ],
      "suggestedBloqs": [
        "selectVariable"
      ],
      "name": "e890befe-602d-44fb-9423-fd3b33295437"
    }
  ],
  "bloqClass": "bloq-length",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-length-length"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": [
          "String"
        ],
        "suggestedBloqs": [
          "selectVariable"
        ],
        "name": "e890befe-602d-44fb-9423-fd3b33295437"
      }
    ]
  ],
  "code": "{TEXT}.length()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "string",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-string",
  "content": [
    [
      {
        "alias": "text",
        "value": "\""
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "placeholder": "bloq-string-string"
      },
      {
        "alias": "text",
        "value": "\""
      }
    ]
  ],
  "code": "\"{TEXT}\"",
  "returnType": {
    "type": "simple",
    "value": "String"
  },
  "arduino": {
    "code": "{TEXT}"
  },
  "python": {
    "codeLines": [
      {
        "code": "\"{TEXT}\""
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringArray",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-stringArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-stringArray-arraySize"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 3
      },
      {
        "alias": "text",
        "value": "bloq-stringArray-stringType"
      }
    ]
  ],
  "code": "(String *)malloc({VALUE}*sizeof(String))",
  "returnType": {
    "type": "simple",
    "value": "String *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringCreate",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "selectVariable"
      ],
      "name": "4187f9c5-b90e-4f9a-aed8-01ea0d6f53db"
    }
  ],
  "bloqClass": "bloq-string-create",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-string-create-create"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "selectVariable"
        ],
        "name": "4187f9c5-b90e-4f9a-aed8-01ea0d6f53db"
      }
    ]
  ],
  "code": "String({TEXT})",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringSum",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "String"
      ],
      "suggestedBloqs": [
        "string",
        "selectVariable"
      ],
      "name": "73c3b466-61e2-4990-89b8-8f06a633260d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "String"
      ],
      "suggestedBloqs": [
        "string",
        "selectVariable"
      ],
      "name": "9f0fc296-ec7e-4bad-9978-63f880437ae7"
    }
  ],
  "bloqClass": "bloq-string-sum",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "String"
        ],
        "suggestedBloqs": [
          "string",
          "selectVariable"
        ],
        "name": "73c3b466-61e2-4990-89b8-8f06a633260d"
      },
      {
        "alias": "text",
        "value": "+"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "String"
        ],
        "suggestedBloqs": [
          "string",
          "selectVariable"
        ],
        "name": "9f0fc296-ec7e-4bad-9978-63f880437ae7"
      }
    ]
  ],
  "code": "String({ARG1})+String({ARG2})",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayVariableAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable"
      ],
      "name": "07950ea0-8d90-4c52-b46f-e17e68eec4a6"
    }
  ],
  "bloqClass": "bloq-array-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-array-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "bloqInputId": "POSITION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable"
        ],
        "name": "07950ea0-8d90-4c52-b46f-e17e68eec4a6"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "{VAR}[{POSITION}]",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "pointer": "true",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareArrayAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float",
        "int"
      ],
      "suggestedBloqs": [
        "number",
        "selectVariable"
      ],
      "name": "dcd97d4d-be15-49f6-9c95-4e6921b58392"
    }
  ],
  "bloqClass": "bloq-declare-array",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-declare-array-declare"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      },
      {
        "alias": "text",
        "value": "bloq-declare-array-declare-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-declare-variable-declare-type-int",
            "value": "int"
          },
          {
            "label": "bloq-declare-variable-declare-type-float",
            "value": "float"
          },
          {
            "label": "bloq-declare-variable-declare-type-text",
            "value": "String"
          },
          {
            "label": "bloq-declare-variable-declare-type-char",
            "value": "char"
          },
          {
            "label": "bloq-declare-variable-declare-type-bool",
            "value": "bool"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-declare-array-declare-size"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "float",
          "int"
        ],
        "suggestedBloqs": [
          "number",
          "selectVariable"
        ],
        "name": "dcd97d4d-be15-49f6-9c95-4e6921b58392"
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE"
  },
  "code": "{TYPE} {NAME} [{VALUE}];"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareVariableAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "basicOperations",
        "string",
        "stringSum",
        "char",
        "boolean"
      ],
      "name": "746fbc60-7b8a-4d4c-a213-1177a6d19a4a"
    }
  ],
  "bloqClass": "bloq-declare-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-declare-variable-declare"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      },
      {
        "alias": "text",
        "value": "bloq-declare-variable-declare-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-declare-variable-declare-type-int",
            "value": "int"
          },
          {
            "label": "bloq-declare-variable-declare-type-float",
            "value": "float"
          },
          {
            "label": "bloq-declare-variable-declare-type-text",
            "value": "String"
          },
          {
            "label": "bloq-declare-variable-declare-type-char",
            "value": "char"
          },
          {
            "label": "bloq-declare-variable-declare-type-bool",
            "value": "bool"
          }
        ]
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "basicOperations",
          "string",
          "stringSum",
          "char",
          "boolean"
        ],
        "name": "746fbc60-7b8a-4d4c-a213-1177a6d19a4a"
      }
    ]
  ],
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE"
  },
  "createDynamicContent": "softwareVars",
  "code": "{TYPE} {NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hwVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-hw-variable-advanced-variable"
      },
      {
        "id": "COMPONENT",
        "alias": "dynamicDropdown",
        "options": "varComponents"
      }
    ]
  ],
  "code": "{COMPONENT}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "COMPONENT",
    "options": "varComponents"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setArrayVariableAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable"
      ],
      "name": "9d641fdb-5263-4d36-934d-409784b2f580"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable"
      ],
      "name": "bb1b1713-3d36-4513-aaa1-3a8cc7f4ce83"
    }
  ],
  "bloqClass": "bloq-set-variableArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-variableArray-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "bloqInputId": "ITERATOR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable"
        ],
        "name": "9d641fdb-5263-4d36-934d-409784b2f580"
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable"
        ],
        "name": "bb1b1713-3d36-4513-aaa1-3a8cc7f4ce83"
      }
    ]
  ],
  "code": "{NAME}[{ITERATOR}] = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-array-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-array-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "{VAR}[{POSITION}]",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "pointer": "true",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareArray",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-declare-array",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-declare-array-declare"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      },
      {
        "alias": "text",
        "value": "bloq-declare-array-declare-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-declare-variable-declare-type-int",
            "value": "int"
          },
          {
            "label": "bloq-declare-variable-declare-type-float",
            "value": "float"
          },
          {
            "label": "bloq-declare-variable-declare-type-text",
            "value": "String"
          },
          {
            "label": "bloq-declare-variable-declare-type-char",
            "value": "char"
          },
          {
            "label": "bloq-declare-variable-declare-type-bool",
            "value": "bool"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-declare-array-declare-size"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 3
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE"
  },
  "code": "{TYPE} {NAME} [{VALUE}];",
  "arduino": {
    "code": "{TYPE} {NAME} [{VALUE}];"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "suggestedBloqs": [
        "number",
        "basicOperations",
        "string",
        "stringSum"
      ],
      "name": "32ea980a-d4b1-4b42-96fe-868c38360dd1"
    }
  ],
  "bloqClass": "bloq-declare-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-declare-variable-declare"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "suggestedBloqs": [
          "number",
          "basicOperations",
          "string",
          "stringSum"
        ],
        "name": "32ea980a-d4b1-4b42-96fe-868c38360dd1"
      }
    ]
  ],
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "VALUE"
  },
  "createDynamicContent": "softwareVars",
  "code": "{VALUE.connectionType} {NAME} = {VALUE};",
  "arduino": {
    "code": "@{VALUE.returnType} {NAME} = {VALUE};"
  },
  "python": {
    "codeLines": [
      {
        "code": "{NAME} = {VALUE}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "swVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-sw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-sw-variable-advanced-variable"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "selectVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-select-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-select-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VAR}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  },
  "arduino": {
    "code": "{VAR}"
  },
  "python": {
    "codeLines": [
      {
        "code": "{VAR}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setArrayVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "pointer": "true",
        "options": "softwareVars"
      },
      "suggestedBloqs": [
        "number",
        "string",
        "selectVariable"
      ],
      "name": "40e54852-b7fe-4673-a0a1-ab97f4eb9eca"
    }
  ],
  "bloqClass": "bloq-set-variableArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-variableArray-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "ITERATOR",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "pointer": "true",
          "options": "softwareVars"
        },
        "suggestedBloqs": [
          "number",
          "string",
          "selectVariable"
        ],
        "name": "40e54852-b7fe-4673-a0a1-ab97f4eb9eca"
      }
    ]
  ],
  "code": "{NAME}[{ITERATOR}] = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "options": "softwareVars"
      },
      "suggestedBloqs": [
        "number",
        "basicOperations",
        "string",
        "stringSum"
      ],
      "name": "c461acc1-787a-486b-bb2c-0e2d8267041b"
    }
  ],
  "bloqClass": "bloq-set-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-variable-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "options": "softwareVars"
        },
        "suggestedBloqs": [
          "number",
          "basicOperations",
          "string",
          "stringSum"
        ],
        "name": "c461acc1-787a-486b-bb2c-0e2d8267041b"
      }
    ]
  ],
  "code": "{NAME} = {VALUE};",
  "python": {
    "codeLines": [
      {
        "code": "{NAME} = {VALUE}"
      }
    ]
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "zowiButtons",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-zowi-buttons",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-buttons"
      },
      {
        "id": "BUTTON",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-buttons-A",
            "value": "PIN_AButton"
          },
          {
            "label": "bloq-zowi-buttons-B",
            "value": "PIN_BButton"
          }
        ]
      }
    ]
  ],
  "code": "digitalRead({BUTTON})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "zowiDistance",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-zowi-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-distance-v1"
      }
    ]
  ],
  "code": "zowi.getDistance()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsFront",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-front",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-simple-walk-v1"
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-backward",
            "value": "BACKWARD"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-endtext"
      }
    ]
  ],
  "code": "zowi.walk({STEPS},{SPEED},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsHeightFront",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-height-front",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-simple-flapping-v1"
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-height-backward",
            "value": "BACKWARD"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-endtext"
      }
    ]
  ],
  "code": "zowi.flapping({STEPS},{SPEED},{HEIGHT},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsHeightSides",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-height-sides",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-simple-moonwalker-v1",
            "value": "moonwalker"
          },
          {
            "label": "bloq-zowi-movements-simple-crusaito-v1",
            "value": "crusaito"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-height-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsNoDir-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-no-dir-v1",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-simple-updown-v1",
            "value": "updown"
          },
          {
            "label": "bloq-zowi-movements-simple-swing-v1",
            "value": "swing"
          },
          {
            "label": "bloq-zowi-movements-simple-tiptoeSwing-v1",
            "value": "tiptoeSwing"
          },
          {
            "label": "bloq-zowi-movements-simple-jitter-v1",
            "value": "jitter"
          },
          {
            "label": "bloq-zowi-movements-simple-ascendingTurn-v1",
            "value": "ascendingTurn"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsSides",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-sides",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-simple-turn-v1",
            "value": "turn"
          },
          {
            "label": "bloq-zowi-movements-simple-shakeLeg-v1",
            "value": "shakeLeg"
          },
          {
            "label": "bloq-zowi-movements-simple-bend-v1",
            "value": "bend"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "zowiSound",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-zowi-sound",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-sound-v1"
      }
    ]
  ],
  "code": "zowi.getNoise()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovements",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-walk",
            "value": "walk"
          },
          {
            "label": "bloq-zowi-movements-turn",
            "value": "turn"
          },
          {
            "label": "bloq-zowi-movements-shakeLeg",
            "value": "shakeLeg"
          },
          {
            "label": "bloq-zowi-movements-bend",
            "value": "bend"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-backward",
            "value": "BACKWARD"
          },
          {
            "label": "bloq-zowi-movements-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsHeight",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-height",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-moonwalker",
            "value": "moonwalker"
          },
          {
            "label": "bloq-zowi-movements-height-crusaito",
            "value": "crusaito"
          },
          {
            "label": "bloq-zowi-movements-height-flapping",
            "value": "flapping"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-height-backward",
            "value": "BACKWARD"
          },
          {
            "label": "bloq-zowi-movements-height-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-height-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsNoDir",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-no-dir",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-no-dir-updown",
            "value": "updown"
          },
          {
            "label": "bloq-zowi-movements-no-dir-swing",
            "value": "swing"
          },
          {
            "label": "bloq-zowi-movements-no-dir-tiptoeSwing",
            "value": "tiptoeSwing"
          },
          {
            "label": "bloq-zowi-movements-no-dir-jitter",
            "value": "jitter"
          },
          {
            "label": "bloq-zowi-movements-no-dir-ascendingTurn",
            "value": "ascendingTurn"
          },
          {
            "label": "bloq-zowi-movements-no-dir-jump",
            "value": "jump"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiGestures",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-gestures",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-gestures-v1"
      },
      {
        "id": "GESTURE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-gestures-ZowiHappy-v1",
            "value": "ZowiHappy"
          },
          {
            "label": "bloq-zowi-gestures-ZowiSuperHappy-v1",
            "value": "ZowiSuperHappy"
          },
          {
            "label": "bloq-zowi-gestures-ZowiSad-v1",
            "value": "ZowiSad"
          },
          {
            "label": "bloq-zowi-gestures-ZowiSleeping-v1",
            "value": "ZowiSleeping"
          },
          {
            "label": "bloq-zowi-gestures-ZowiFart-v1",
            "value": "ZowiFart"
          },
          {
            "label": "bloq-zowi-gestures-ZowiConfused-v1",
            "value": "ZowiConfused"
          },
          {
            "label": "bloq-zowi-gestures-ZowiLove-v1",
            "value": "ZowiLove"
          },
          {
            "label": "bloq-zowi-gestures-ZowiAngry-v1",
            "value": "ZowiAngry"
          },
          {
            "label": "bloq-zowi-gestures-ZowiFretful-v1",
            "value": "ZowiFretful"
          },
          {
            "label": "bloq-zowi-gestures-ZowiVictory-v1",
            "value": "ZowiVictory"
          },
          {
            "label": "bloq-zowi-gestures-ZowiFail-v1",
            "value": "ZowiFail"
          }
        ]
      }
    ]
  ],
  "code": "zowi.playGesture({GESTURE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiHome",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-rest",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-rest-v1"
      }
    ]
  ],
  "code": "zowi.home();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "zowiIfButtons",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "all",
        "ifDown"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-if-buttons",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-if-buttons"
      },
      {
        "id": "BUTTON",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "A",
            "value": "PIN_AButton"
          },
          {
            "label": "B",
            "value": "PIN_BButton"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-if-buttons-then-v1"
      }
    ]
  ],
  "code": "if(digitalRead({BUTTON}) == 1){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "zowiIfDistance",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "all",
        "ifDown"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-if-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-if-distance"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-if-distance-less",
            "value": "<"
          },
          {
            "label": "bloq-zowi-if-distance-more",
            "value": ">"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-if-distance-than"
      },
      {
        "id": "DISTANCE",
        "alias": "numberInput",
        "value": 15
      },
      {
        "alias": "text",
        "value": "bloq-zowi-if-distance-then-v1"
      }
    ]
  ],
  "code": "if(zowi.getDistance() {OPERATOR} {DISTANCE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "zowiIfSound",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top",
      "acceptedAliases": [
        "all",
        "ifDown"
      ]
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-if-sound",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-if-sound-v1"
      }
    ]
  ],
  "code": " if(zowi.getNoise() >= 650){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMouth",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-mouth",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-mouth-v1"
      },
      {
        "id": "GESTURE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-mouth-smile",
            "value": "smile_code"
          },
          {
            "label": "bloq-zowi-mouth-sad",
            "value": "sad_code"
          },
          {
            "label": "bloq-zowi-mouth-happy",
            "value": "happyOpen_code"
          },
          {
            "label": "bloq-zowi-mouth-confused",
            "value": "confused_code"
          },
          {
            "label": "bloq-zowi-mouth-bigSurprise",
            "value": "bigSurprise_code"
          },
          {
            "label": "bloq-zowi-mouth-tongueOut",
            "value": "tongueOut_code"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-mouth-mouth"
      }
    ]
  ],
  "code": "zowi.putMouth({GESTURE}, false);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsSimple",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-simple",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-simple-walk-v1",
            "value": "walk"
          },
          {
            "label": "bloq-zowi-movements-simple-turn-v1",
            "value": "turn"
          },
          {
            "label": "bloq-zowi-movements-simple-shakeLeg-v1",
            "value": "shakeLeg"
          },
          {
            "label": "bloq-zowi-movements-simple-bend-v1",
            "value": "bend"
          },
          {
            "label": "bloq-zowi-movements-simple-moonwalker-v1",
            "value": "moonwalker"
          },
          {
            "label": "bloq-zowi-movements-simple-crusaito-v1",
            "value": "crusaito"
          },
          {
            "label": "bloq-zowi-movements-simple-flapping-v1",
            "value": "flapping"
          },
          {
            "label": "bloq-zowi-movements-simple-updown-v1",
            "value": "updown"
          },
          {
            "label": "bloq-zowi-movements-simple-swing-v1",
            "value": "swing"
          },
          {
            "label": "bloq-zowi-movements-simple-tiptoeSwing-v1",
            "value": "tiptoeSwing"
          },
          {
            "label": "bloq-zowi-movements-simple-jitter-v1",
            "value": "jitter"
          },
          {
            "label": "bloq-zowi-movements-simple-ascendingTurn-v1",
            "value": "ascendingTurn"
          },
          {
            "label": "bloq-zowi-movements-simple-jump-v1",
            "value": "jump"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-simple-steps"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiSounds",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-sounds",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-sounds-v1"
      },
      {
        "id": "SOUND",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-sounds-surprise",
            "value": "S_surprise"
          },
          {
            "label": "bloq-zowi-sounds-OhOoh",
            "value": "S_OhOoh"
          },
          {
            "label": "bloq-zowi-sounds-cuddly",
            "value": "S_cuddly"
          },
          {
            "label": "bloq-zowi-sounds-sleeping",
            "value": "S_sleeping"
          },
          {
            "label": "bloq-zowi-sounds-happy",
            "value": "S_happy"
          },
          {
            "label": "bloq-zowi-sounds-sad",
            "value": "S_sad"
          },
          {
            "label": "bloq-zowi-sounds-confused",
            "value": "S_confused"
          },
          {
            "label": "bloq-zowi-sounds-fart1-v1",
            "value": "S_fart1"
          }
        ]
      }
    ]
  ],
  "code": "zowi.sing({SOUND});"
});
