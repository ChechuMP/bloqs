db.bitbloq_Bloqs.remove({});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayClassVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-array-class-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-array-class-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{VAR}[{POSITION}]",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "pointer": "true",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "classChildren",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-class-children",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-class"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      },
      {
        "alias": "text",
        "value": "bloq-class-inheritance-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-class-inheritance-public",
            "value": "public"
          },
          {
            "label": "bloq-class-inheritance-protected",
            "value": "protected"
          },
          {
            "label": "bloq-class-inheritance-private",
            "value": "private"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-class-from"
      },
      {
        "id": "PARENT",
        "alias": "dynamicDropdown",
        "options": "classes"
      }
    ]
  ],
  "createDynamicContent": "classes",
  "code": "class {NAME} : public {PARENT}{{STATEMENTS}};",
  "hCode": "class {NAME}: public {PARENT}{{STATEMENTS}};",
  "cppCode": "",
  "returnType": {
    "type": "simple",
    "value": "class"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "constructorClassArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "69cdcd6b-a68a-4c1b-9e85-3b31bafa9199"
    }
  ],
  "bloqClass": "bloq-constructor-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-constructor-arguments"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "69cdcd6b-a68a-4c1b-9e85-3b31bafa9199"
      }
    ]
  ],
  "code": "{CLASS-OUTSIDE} ({ARGS}){{STATEMENTS}};",
  "hCode": "{CLASS-OUTSIDE} ({ARGS});",
  "cppCode": "{CLASS-OUTSIDE} :: {CLASS-OUTSIDE} ({ARGS}){{STATEMENTS}};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeArgumentsClass",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "ac67b325-0e80-4bca-86c9-1e002c18e8a2"
    }
  ],
  "bloqClass": "bloq-invoke-arguments-class",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-arguments-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "classes"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-arguments-class-name"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-arguments-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "ac67b325-0e80-4bca-86c9-1e002c18e8a2"
      }
    ]
  ],
  "createDynamicContent": "objects",
  "code": "{CLASS} {NAME}({ARGS});",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeClassFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "a05feb34-aae6-4617-a5e3-3ba347ba7f43"
    }
  ],
  "bloqClass": "bloq-invoke-class-function-args",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "a05feb34-aae6-4617-a5e3-3ba347ba7f43"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}({ARGS});",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeClassReturnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "925d2392-e667-4622-b703-ba2453200a96"
    }
  ],
  "bloqClass": "bloq-invoke-class-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-args-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-args-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-args-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "925d2392-e667-4622-b703-ba2453200a96"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}({ARGS});",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "private",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-private",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-private"
      }
    ]
  ],
  "code": "private : {STATEMENTS}",
  "hCode": "private : {STATEMENTS}",
  "cppCode": ""
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "protected",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-protected",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-protected"
      }
    ]
  ],
  "code": "protected : {STATEMENTS}",
  "hCode": "protected : {STATEMENTS}",
  "cppCode": ""
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "public",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-public",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-public"
      }
    ]
  ],
  "code": "public : {STATEMENTS}",
  "hCode": "public : {STATEMENTS}",
  "cppCode": ""
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setClassArrayVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "pointer": "true",
        "options": "softwareVars"
      },
      "name": "7b70ef6f-8a46-45b2-ba57-e0647150ddb2"
    }
  ],
  "bloqClass": "bloq-set-class-variableArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-class-variableArray-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "ITERATOR",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "pointer": "true",
          "options": "softwareVars"
        },
        "name": "7b70ef6f-8a46-45b2-ba57-e0647150ddb2"
      }
    ]
  ],
  "code": "{CLASS}.{NAME}[{ITERATOR}] = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "class",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-class",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-class"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      }
    ]
  ],
  "createDynamicContent": "classes",
  "code": "class {NAME}{{STATEMENTS}};",
  "hCode": "class {NAME}{{STATEMENTS}};",
  "cppCode": "",
  "returnType": {
    "type": "simple",
    "value": "class"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "constructorClass",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-constructor",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-constructor"
      }
    ]
  ],
  "code": "{CLASS-OUTSIDE}(){{STATEMENTS}};",
  "hCode": "{CLASS-OUTSIDE} ();",
  "cppCode": "{CLASS-OUTSIDE} :: {CLASS-OUTSIDE} (){{STATEMENTS}};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "includeLib",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-include-lib",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-include-lib-exec"
      },
      {
        "id": "LIB",
        "alias": "dynamicDropdown",
        "options": "libraries"
      }
    ]
  ],
  "code": "#include \"{LIB}\";"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeClass",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-class",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "classes"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-name"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "objects",
  "code": "{CLASS} {NAME};",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeClassFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-class-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}();",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeClassReturnFunction",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-invoke-class-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}()",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "selectClassVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-select-class-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-select-class-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{VAR}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setClassVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "options": "softwareVars"
      },
      "name": "12da2dfd-8448-4184-81fe-0a0686c9cd88"
    }
  ],
  "bloqClass": "bloq-set-class-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-class-variable-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "options": "softwareVars"
        },
        "name": "12da2dfd-8448-4184-81fe-0a0686c9cd88"
      }
    ]
  ],
  "code": "{CLASS}.{NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "code",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-code",
  "content": [
    [
      {
        "id": "CODE",
        "alias": "multilineCodeInput",
        "value": "",
        "placeholder": "bloq-code-writeYourCode"
      }
    ]
  ],
  "code": "{CODE}\n"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "comment",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-comment",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-comment-comment"
      },
      {
        "id": "COMMENT",
        "alias": "multilineCommentInput",
        "placeholder": "bloq-comment-default"
      }
    ]
  ],
  "code": "/*\n{COMMENT}\n*/"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "enableInterrupt",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-enable-interrupt",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-enable-interrupt"
      },
      {
        "id": "FUNC",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-enable-interrupt-pin"
      },
      {
        "id": "PIN",
        "alias": "dynamicDropdown",
        "options": "varComponents"
      },
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-enable-interrupt-rising",
            "value": "RISING"
          },
          {
            "label": "bloq-enable-interrupt-falling",
            "value": "FALLING"
          },
          {
            "label": "bloq-enable-interrupt-change",
            "value": "CHANGE"
          }
        ]
      }
    ]
  ],
  "code": "enableInterrupt({PIN}, {FUNC}, {STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "convert",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "int",
        "float"
      ],
      "name": "d59b3eab-0ca4-4a6b-a2b8-9151e7feb803"
    }
  ],
  "bloqClass": "bloq-convert",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-convert-convert"
      },
      {
        "bloqInputId": "NUMBER",
        "alias": "bloqInput",
        "acceptType": [
          "int",
          "float"
        ],
        "name": "d59b3eab-0ca4-4a6b-a2b8-9151e7feb803"
      },
      {
        "alias": "text",
        "value": "bloq-convert-to"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-convert-dec",
            "value": "DEC"
          },
          {
            "label": "bloq-convert-hex",
            "value": "HEX"
          },
          {
            "label": "bloq-convert-oct",
            "value": "OCT"
          },
          {
            "label": "bloq-convert-bin",
            "value": "BIN"
          }
        ]
      }
    ]
  ],
  "code": "({NUMBER},{TYPE});",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "serialSend",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "8c9dbe01-cf55-4e6e-936c-9d5501f13aec"
    }
  ],
  "bloqClass": "bloq-serial-send",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "bloq-serial-send-send"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "8c9dbe01-cf55-4e6e-936c-9d5501f13aec"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-serial-send-println",
            "value": "println"
          },
          {
            "label": "bloq-serial-send-print",
            "value": "print"
          }
        ]
      }
    ]
  ],
  "code": "{SERIAL}.{FUNCTION}({DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "serialReceive",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-serial-receiver",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "bloq-serial-receiver-receive"
      }
    ]
  ],
  "code": "{SERIAL}.readString()",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "serialSend-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "b4d273ed-e55e-4f2c-b895-0da12308488c"
    }
  ],
  "bloqClass": "bloq-serial-send",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "bloq-serial-send-send"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "b4d273ed-e55e-4f2c-b895-0da12308488c"
      },
      {
        "id": "LN",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-serial-send-println",
            "value": "println"
          },
          {
            "label": "bloq-serial-send-print",
            "value": "print"
          }
        ]
      }
    ]
  ],
  "code": "{SERIAL}.{LN}({DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "PTSensor",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-PTsensor",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-PTsensor"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-PTsensor-pressure",
            "value": "getPressure()"
          },
          {
            "label": "bloq-PTsensor-temperature",
            "value": "getTemperature()"
          },
          {
            "label": "bloq-PTsensor-altitude",
            "value": "getAltitude()"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-PTsensor-sensor"
      },
      {
        "id": "PTSENS",
        "alias": "dynamicDropdown",
        "options": "barometer"
      }
    ]
  ],
  "code": "{PTSENS}.{FUNCTION}",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rgbLed",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-red"
      },
      {
        "id": "RED",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-green"
      },
      {
        "id": "GREEN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-blue"
      },
      {
        "id": "BLUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LED}.setRGBcolor({RED},{GREEN},{BLUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLedFade",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rgbLed-fade",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade-red"
      },
      {
        "id": "RED",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade-green"
      },
      {
        "id": "GREEN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade-blue"
      },
      {
        "id": "BLUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LED}.crossFade({RED},{GREEN},{BLUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLedSimple",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rgbLed-simple",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed-simple"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-simple-color"
      },
      {
        "id": "COLOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-rgbLed-simple-white",
            "value": "255,255,255"
          },
          {
            "label": "bloq-rgbLed-simple-yellow",
            "value": "255,255,0"
          },
          {
            "label": "bloq-rgbLed-simple-orange",
            "value": "200,50,0"
          },
          {
            "label": "bloq-rgbLed-simple-red",
            "value": "255,0,0"
          },
          {
            "label": "bloq-rgbLed-simple-green",
            "value": "0,255,0"
          },
          {
            "label": "bloq-rgbLed-simple-dark-green",
            "value": "0,60,102"
          },
          {
            "label": "bloq-rgbLed-simple-blue",
            "value": "40,40,255"
          },
          {
            "label": "bloq-rgbLed-simple-dark-blue",
            "value": "0,0,255"
          },
          {
            "label": "bloq-rgbLed-simple-pink",
            "value": "255,0,255"
          }
        ]
      }
    ]
  ],
  "code": "{LED}.setRGBcolor({COLOR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "PTSensorCalibration",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-PTsensor-calibration",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-PTsensor-calibration"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 101325
      },
      {
        "alias": "text",
        "value": "bloq-PTsensor-calibration-sensor"
      },
      {
        "id": "PTSENS",
        "alias": "dynamicDropdown",
        "options": "barometer"
      }
    ]
  ],
  "code": "{PTSENS}.setSealevelPressure({VALUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLedAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "90c5b2bc-e86d-41c2-ac4f-627d317bdaac"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "09eccce5-39e6-4eec-ac15-20c064ecc186"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "eb3958ab-3228-4a37-ae05-d91fa6d7bcec"
    }
  ],
  "bloqClass": "bloq-rgbLed-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-red"
      },
      {
        "bloqInputId": "RED",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "90c5b2bc-e86d-41c2-ac4f-627d317bdaac"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-green"
      },
      {
        "bloqInputId": "GREEN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "09eccce5-39e6-4eec-ac15-20c064ecc186"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-blue"
      },
      {
        "bloqInputId": "BLUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "eb3958ab-3228-4a37-ae05-d91fa6d7bcec"
      }
    ]
  ],
  "code": "{LED}.setRGBcolor({RED},{GREEN},{BLUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "analogReadAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "caaa9fc5-b5df-438b-83bf-0b50ce79e838"
    }
  ],
  "bloqClass": "bloq-analog-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-analog-read-advanced-readpin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "caaa9fc5-b5df-438b-83bf-0b50ce79e838"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogRead({PIN})'.replace(/\"/g, '') : 'analogRead({PIN})'",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "analogWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "55f40337-8430-4f0e-8998-89351e3c5c06"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "03a45ec3-b480-4596-9495-aa229dd7a828"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-analog-write"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "55f40337-8430-4f0e-8998-89351e3c5c06"
      },
      {
        "alias": "text",
        "value": "bloq-pin-analog-write-data"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "03a45ec3-b480-4596-9495-aa229dd7a828"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogWrite({PIN},{DATA});'.replace(/\"/g, '') : 'analogWrite({PIN},{DATA});'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "buzzerAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "4340092a-fbc0-419d-b142-168cb710ff59"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "a7d5a8ec-adc2-4a0f-953c-7d0ed0b8f309"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "a396fb76-a245-4af5-bf6b-efdeed4a33cb"
    }
  ],
  "bloqClass": "bloq-buzzer-advance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-sound"
      },
      {
        "bloqInputId": "BUZZER",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "4340092a-fbc0-419d-b142-168cb710ff59"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-note"
      },
      {
        "bloqInputId": "NOTE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "a7d5a8ec-adc2-4a0f-953c-7d0ed0b8f309"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-for"
      },
      {
        "bloqInputId": "SECONDS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "a396fb76-a245-4af5-bf6b-efdeed4a33cb"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStartAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "6f0ac070-b358-415f-9b6a-32fd734721fc"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "4b0aa71d-dcc3-478e-8757-7d6305a3c356"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-turn"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "6f0ac070-b358-415f-9b6a-32fd734721fc"
      },
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-direction"
      },
      {
        "bloqInputId": "DIRECTION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "4b0aa71d-dcc3-478e-8757-7d6305a3c356"
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStopAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "a17d52e8-30c0-4552-83e5-0242c228c766"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-stop-advanced-stop"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "a17d52e8-30c0-4552-83e5-0242c228c766"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "digitalReadAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "4c576eb9-42bf-4dea-8508-16ec77ab19bf"
    }
  ],
  "bloqClass": "bloq-digital-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-digital-read-advanced-readpin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "4c576eb9-42bf-4dea-8508-16ec77ab19bf"
      }
    ]
  ],
  "code": "digitalRead({PIN})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "digitalWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "152c233f-c317-4cfb-9d22-d56bd1a6008b"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "0c451735-ac6b-4b64-a25b-2df4a6e96a46"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-digital-write"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "152c233f-c317-4cfb-9d22-d56bd1a6008b"
      },
      {
        "alias": "text",
        "value": "bloq-pin-digital-write-data"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "0c451735-ac6b-4b64-a25b-2df4a6e96a46"
      }
    ]
  ],
  "code": "digitalWrite({PIN},{DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdTurnOnOffAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "ca7d824c-7ffe-4dcb-a481-003b76d708c2"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-off-advanced",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-lcd-turn-on-off-advanced-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-lcd-turn-on-off-advanced-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-lcd-turn-on-off-advanced-lcdLigth"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "ca7d824c-7ffe-4dcb-a481-003b76d708c2"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWriteAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "36bd7314-b234-457e-950a-562663ef0db3"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "8f95e996-8ac2-4674-b5f0-8857810597cb"
    }
  ],
  "bloqClass": "bloq-lcd-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-write"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "36bd7314-b234-457e-950a-562663ef0db3"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inLCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "8f95e996-8ac2-4674-b5f0-8857810597cb"
      }
    ]
  ],
  "code": "{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWritePositionAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "d9360823-1441-4690-afa0-b4b2f53ee0cb"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "479417f1-1804-427b-b9e6-aced0363905d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "9e10bff8-05a0-4bf8-a699-756e7c2891db"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "01c3aae2-3a12-45c6-975e-d9cabcd94a5d"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "d9360823-1441-4690-afa0-b4b2f53ee0cb"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "479417f1-1804-427b-b9e6-aced0363905d"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inPosition"
      },
      {
        "bloqInputId": "COLUMN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "9e10bff8-05a0-4bf8-a699-756e7c2891db"
      },
      {
        "bloqInputId": "ROW",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "01c3aae2-3a12-45c6-975e-d9cabcd94a5d"
      }
    ]
  ],
  "code": "{LCD}.setCursor({COLUMN},{ROW});{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "ledAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "499f9000-a4d1-4b97-9833-4096e1cbe749"
    }
  ],
  "bloqClass": "bloq-led-advanced",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-led-advanced-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-led-advanced-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-led-advanced-theLED"
      },
      {
        "bloqInputId": "LED",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "499f9000-a4d1-4b97-9833-4096e1cbe749"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "1f748e57-7499-47fc-b473-8b3892c78901"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "455a8896-60b1-4cf2-b610-1aa798c8d90f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "7f4ae32e-d83a-44bb-aa4c-ea71eb4ce00d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "d6ad2611-a756-4685-9c39-7fbe501b05a2"
    }
  ],
  "bloqClass": "bloq-oscillator-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-oscillate"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "1f748e57-7499-47fc-b473-8b3892c78901"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-around"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "455a8896-60b1-4cf2-b610-1aa798c8d90f"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-amplitude"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "7f4ae32e-d83a-44bb-aa4c-ea71eb4ce00d"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-speed"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "d6ad2611-a756-4685-9c39-7fbe501b05a2"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});\n{OSCILLATOR}.SetA({AMPLITUDE});\n{OSCILLATOR}.SetT({SPEED});\n{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStartAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "2bdbdb9f-8474-47f4-9586-98505f2516f3"
    }
  ],
  "bloqClass": "bloq-oscillator-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-start-advanced-oscillator"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "2bdbdb9f-8474-47f4-9586-98505f2516f3"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStopAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "dad60e63-86d1-4ae8-8111-61c434672b67"
    }
  ],
  "bloqClass": "bloq-oscillator-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-stop-advanced-stop"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "dad60e63-86d1-4ae8-8111-61c434672b67"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servoNormalAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "fd3a5626-ab8b-472d-a1cb-8edbc7ecb7ca"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "f0ba7bf9-0a7b-4c09-bff8-c3ef8039dd48"
    }
  ],
  "bloqClass": "bloq-servo-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-servo-advanced-move"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "fd3a5626-ab8b-472d-a1cb-8edbc7ecb7ca"
      },
      {
        "alias": "text",
        "value": "bloq-servo-advanced-to"
      },
      {
        "bloqInputId": "POSITION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "f0ba7bf9-0a7b-4c09-bff8-c3ef8039dd48"
      },
      {
        "alias": "text",
        "value": "bloq-servo-advanced-degrees"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servoAttach",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo-attach",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-servo-attach"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "allServos"
      }
    ]
  ],
  "code": "{SERVO}.attach({SERVO.pin});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servoDetach",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo-detach",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-servo-detach"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "allServos"
      }
    ]
  ],
  "code": "{SERVO}.detach();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "buzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-buzzer-sound"
      },
      {
        "id": "BUZZER",
        "alias": "dynamicDropdown",
        "options": "buzzers"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-note"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-buzzer-do",
            "value": "261"
          },
          {
            "label": "bloq-buzzer-re",
            "value": "293"
          },
          {
            "label": "bloq-buzzer-mi",
            "value": "329"
          },
          {
            "label": "bloq-buzzer-fa",
            "value": "349"
          },
          {
            "label": "bloq-buzzer-sol",
            "value": "392"
          },
          {
            "label": "bloq-buzzer-la",
            "value": "440"
          },
          {
            "label": "bloq-buzzer-si",
            "value": "494"
          },
          {
            "label": "bloq-buzzer-do-#",
            "value": "277"
          },
          {
            "label": "bloq-buzzer-re-#",
            "value": "311"
          },
          {
            "label": "bloq-buzzer-fa-#",
            "value": "370"
          },
          {
            "label": "bloq-buzzer-sol-#",
            "value": "415"
          },
          {
            "label": "bloq-buzzer-la-#",
            "value": "466"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-for"
      },
      {
        "id": "SECONDS",
        "alias": "numberInput",
        "value": 2000
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-turn"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "continuousServos"
      },
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-direction"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-continuous-servo-start-clockwise",
            "value": "180"
          },
          {
            "label": "bloq-continuous-servo-start-counterclockwise",
            "value": "0"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-stop-stop"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "continuousServos"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStartAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-turn"
      },
      {
        "continuousServoStartAdvancedInputId": "SERVO",
        "alias": "continuousServoStartAdvancedInput",
        "acceptType": [
          "all"
        ]
      },
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-direction"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-continuous-servo-start-advanced-clockwise",
            "value": "0"
          },
          {
            "label": "bloq-continuous-servo-start-advanced-counterclockwise",
            "value": "180"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWritePositionAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "8d0066ae-49bb-44ec-b636-9c24b73abf27"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "d73c7e70-37b1-4061-bd76-c02e97b5284d"
    }
  ],
  "bloqClass": "bloq-lcd-writte deprecated",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "8d0066ae-49bb-44ec-b636-9c24b73abf27"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "d73c7e70-37b1-4061-bd76-c02e97b5284d"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inPosition"
      },
      {
        "id": "COLUMN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "id": "ROW",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LCD}.setCursor({COLUMN},{ROW});{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "pinReadAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "bcccaafc-83d5-44aa-b71e-b8d0e6b60fc1"
    }
  ],
  "bloqClass": "bloq-pin-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-read-advanced-readpin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "bcccaafc-83d5-44aa-b71e-b8d0e6b60fc1"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogRead({PIN})' : 'digitalRead({PIN})'",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "pinWriteAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "b3e22ef7-a1dd-4fa9-bb62-ad70ceb6d187"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "0dccef25-d355-4450-9264-20cb67925f19"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-writte-advanced-writepin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "b3e22ef7-a1dd-4fa9-bb62-ad70ceb6d187"
      },
      {
        "alias": "text",
        "value": "bloq-pin-writte-advanced-data"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "0dccef25-d355-4450-9264-20cb67925f19"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogWrite({PIN},{DATA});' : 'digitalWrite({PIN},{DATA});'"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "readSensorAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "9d899b50-67fe-4e1b-9c24-a6febc3a08ae"
    }
  ],
  "bloqClass": "bloq-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-read-advanced-read"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "9d899b50-67fe-4e1b-9c24-a6febc3a08ae"
      }
    ]
  ],
  "code": "{SENSOR.type}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "SENSOR",
    "options": "sensors"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hts221Humidity",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hts221-humidity",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-hts221-humidity"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "hts221"
      }
    ]
  ],
  "code": "{SENSOR}.getHumidity()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hts221Temperature",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hts221-temperature",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-hts221-temperature"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "hts221"
      }
    ]
  ],
  "code": "{SENSOR}.getTemperature()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdClear",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-clear",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-clear"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.clear();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-off",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-lcd-turn-on-off-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-lcd-turn-on-off-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-lcd-turn-on-off-lcdLigth"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "defaultValue": "bloq-lcd-default"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.print(\"{TEXT}\");"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWritePosition",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "defaultValue": "bloq-lcd-default"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inPosition"
      },
      {
        "id": "COLUMN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "id": "ROW",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LCD}.setCursor({COLUMN},{ROW});{LCD}.print(\"{TEXT}\");"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "led",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-led",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-led-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-led-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-led-theLED"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "leds"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-oscillate"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-around"
      },
      {
        "id": "PHASE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-amplitude"
      },
      {
        "id": "AMPLITUDE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-speed"
      },
      {
        "id": "SPEED",
        "alias": "numberInput",
        "value": 2000
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});{OSCILLATOR}.SetA({AMPLITUDE});{OSCILLATOR}.SetT({SPEED});{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-start-oscillator"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.Play();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-stop-stop"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.Stop();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorTimes",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-oscillate"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-around"
      },
      {
        "id": "PHASE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-amplitude"
      },
      {
        "id": "AMPLITUDE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-speed"
      },
      {
        "id": "SPEED",
        "alias": "numberInput",
        "value": 2000
      },
      {
        "id": "TIMES",
        "alias": "numberInput",
        "value": 2
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-times"
      }
    ]
  ],
  "code": "oscillate({OSCILLATOR}, {AMPLITUDE}, {PHASE}, {SPEED}, {TIMES});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "readSensor",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-read-sensor",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-read-read"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "sensors"
      }
    ]
  ],
  "code": "{SENSOR.type}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "SENSOR",
    "options": "sensors"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "clockRTC",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-rtc",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rtc"
      },
      {
        "id": "RTC_FUNC",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-rtc-date",
            "value": "getDate"
          },
          {
            "label": "bloq-rtc-time",
            "value": "getTime"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-rtc-using"
      },
      {
        "id": "RTC",
        "alias": "dynamicDropdown",
        "options": "clocks"
      }
    ]
  ],
  "code": "{RTC}.{RTC_FUNC}()",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "clockRTCAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-rtc-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rtc-advanced"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-rtc-hour",
            "value": "getHour"
          },
          {
            "label": "bloq-rtc-minute",
            "value": "getMinute"
          },
          {
            "label": "bloq-rtc-second",
            "value": "getSecond"
          },
          {
            "label": "bloq-rtc-day",
            "value": "getDay"
          },
          {
            "label": "bloq-rtc-month",
            "value": "getMonth"
          },
          {
            "label": "bloq-rtc-year",
            "value": "getYear"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-rtc-using-advanced"
      },
      {
        "id": "RTC",
        "alias": "dynamicDropdown",
        "options": "clocks"
      }
    ]
  ],
  "code": "{RTC}.{FUNCTION}()",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "clockRTCInit",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rtc-init",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rtc-init"
      },
      {
        "id": "RTC",
        "alias": "dynamicDropdown",
        "options": "clocks"
      }
    ]
  ],
  "code": "{RTC}.adjust(DateTime(__DATE__, __TIME__));"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servoNormal",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-servo-move"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "servos"
      },
      {
        "alias": "text",
        "value": "bloq-servo-to"
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-servo-degrees"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "caseAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "5f28fb19-c2c7-4569-be59-476fe61fb165"
    }
  ],
  "bloqClass": "bloq-case",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-case-ifSameTo"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "5f28fb19-c2c7-4569-be59-476fe61fb165"
      },
      {
        "alias": "text",
        "value": "bloq-case-exec"
      }
    ]
  ],
  "code": "case {VALUE}:{STATEMENTS}break;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "elseifAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "ed91c083-9656-494f-b47a-306b0bde2768"
    }
  ],
  "bloqClass": "bloq-else-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-else-if-if"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "ed91c083-9656-494f-b47a-306b0bde2768"
      },
      {
        "alias": "text",
        "value": "bloq-else-if-else"
      }
    ]
  ],
  "code": "else if ({VAR}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "forAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "30c51353-d801-4e1d-b670-fd0386b18ac2"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "7e0f0e45-9a48-4808-b569-c1ea6acd8543"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "e7cfb214-cd5d-403f-a748-161d526bea23"
    }
  ],
  "bloqClass": "bloq-for",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "30c51353-d801-4e1d-b670-fd0386b18ac2"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "bloqInputId": "INIT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "7e0f0e45-9a48-4808-b569-c1ea6acd8543"
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "bloqInputId": "FINAL",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "e7cfb214-cd5d-403f-a748-161d526bea23"
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "+"
          },
          {
            "label": "bloq-for-subtract",
            "value": "-"
          }
        ]
      },
      {
        "id": "ADD",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "'for({VAR}={INIT};{VAR}' + ('{MODE}' === '+'?'<=':'>=' ) + '{FINAL};{VAR}{MODE}={ADD}){{STATEMENTS}}'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "ifAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "fa9ee0ba-e31a-49ea-914e-70fba59f5e75"
    }
  ],
  "bloqClass": "bloq-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-if-if"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "fa9ee0ba-e31a-49ea-914e-70fba59f5e75"
      },
      {
        "alias": "text",
        "value": "bloq-if-exec"
      }
    ]
  ],
  "code": "if({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switchAdvanced-v2",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "eb774cc2-0a0d-487a-9d91-9fc69c852d2d"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-switch-check"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "eb774cc2-0a0d-487a-9d91-9fc69c852d2d"
      }
    ]
  ],
  "code": "switch ({VAR}) {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "waitAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "66cbdd45-f928-4ec4-87d5-4d4113de8908"
    }
  ],
  "bloqClass": "bloq-wait",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-wait-wait"
      },
      {
        "bloqInputId": "TIME",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "66cbdd45-f928-4ec4-87d5-4d4113de8908"
      }
    ]
  ],
  "code": "delay({TIME});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "whileAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "5f17a23d-2856-426b-ad77-f85901b77fa6"
    }
  ],
  "bloqClass": "bloq-while",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-while-while"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "5f17a23d-2856-426b-ad77-f85901b77fa6"
      },
      {
        "alias": "text",
        "value": "bloq-while-exec"
      }
    ]
  ],
  "code": "while ({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "break",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-break",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-break-stopLoop"
      }
    ]
  ],
  "code": "break;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "case",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-case",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-case-ifSameTo"
      },
      {
        "id": "VAR",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-case-exec"
      }
    ]
  ],
  "code": "case {VAR}:{STATEMENTS}break;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "caseDefault",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-case-default",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-case-default-inOtherCase"
      }
    ]
  ],
  "code": "default:{STATEMENTS}break;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continue",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continue",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continue-continue"
      }
    ]
  ],
  "code": "continue;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "for",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-for deprecated",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "id": "INIT",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "id": "FINAL",
        "alias": "numberInput",
        "value": 10
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "++"
          },
          {
            "label": "bloq-for-subtract",
            "value": "--"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "for({VAR}={INIT};{VAR}<{FINAL};{VAR}{MODE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "forAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "96d62271-07bd-465f-87ac-5592867a9a6b"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "3dff34cc-fa90-49ef-9bfd-1ca18c178339"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "adf1dd08-5cc1-4950-9a61-5102b8cfc925"
    }
  ],
  "bloqClass": "bloq-for deprecated",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "96d62271-07bd-465f-87ac-5592867a9a6b"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "bloqInputId": "INIT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "3dff34cc-fa90-49ef-9bfd-1ca18c178339"
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "bloqInputId": "FINAL",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "adf1dd08-5cc1-4950-9a61-5102b8cfc925"
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "++"
          },
          {
            "label": "bloq-for-subtract",
            "value": "--"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "for({VAR}={INIT};{VAR}<{FINAL};{VAR}{MODE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switchAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "f48ed778-1a29-44c1-8041-9e3f7c68b7b4"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-switch-check"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "f48ed778-1a29-44c1-8041-9e3f7c68b7b4"
      }
    ]
  ],
  "code": "switch (int({VAR})) {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "else",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-else",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-else-else"
      }
    ]
  ],
  "code": "else {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "elseif",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "54517326-fc14-4ff8-8584-5c16f177036e"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "d107a081-0a1f-4c16-bfac-8bf5a7e4a944"
    }
  ],
  "bloqClass": "bloq-else-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-else-if-if"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "54517326-fc14-4ff8-8584-5c16f177036e"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "d107a081-0a1f-4c16-bfac-8bf5a7e4a944"
      },
      {
        "alias": "text",
        "value": "bloq-else-if-else"
      }
    ]
  ],
  "code": "else if ({ARG1} {OPERATOR} {ARG2}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "for-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-for",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "id": "INIT",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "id": "FINAL",
        "alias": "numberInput",
        "value": 10
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "+"
          },
          {
            "label": "bloq-for-subtract",
            "value": "-"
          }
        ]
      },
      {
        "id": "ADD",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "'for({VAR}={INIT};{VAR}' + ('{MODE}' === '+'?'<=':'>=' ) + '{FINAL};{VAR}{MODE}={ADD}){{STATEMENTS}}'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "if",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "96be9d7a-dfa1-4e0a-9d83-29035d59bff6"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "1cf2c15c-46b0-4486-a7ea-b092c4556218"
    }
  ],
  "bloqClass": "bloq-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-if-if"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "96be9d7a-dfa1-4e0a-9d83-29035d59bff6"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "1cf2c15c-46b0-4486-a7ea-b092c4556218"
      },
      {
        "alias": "text",
        "value": "bloq-if-exec"
      }
    ]
  ],
  "code": "if({ARG1} {OPERATOR} {ARG2}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "millis",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-millis",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-millis"
      }
    ]
  ],
  "code": "millis()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switch",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-switch-check"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "switch (int({VAR})) {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "wait",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-wait",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-wait-wait"
      },
      {
        "id": "TIME",
        "alias": "numberInput",
        "value": 2000
      },
      {
        "alias": "text",
        "value": "bloq-wait-ms"
      }
    ]
  ],
  "code": "delay({TIME});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "while",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "2002c840-763a-4954-b1f5-3b8b1cb9307f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "701dabad-43aa-4c7e-97ed-fa22e97fd374"
    }
  ],
  "bloqClass": "bloq-while",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-while-while"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "2002c840-763a-4954-b1f5-3b8b1cb9307f"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "701dabad-43aa-4c7e-97ed-fa22e97fd374"
      },
      {
        "alias": "text",
        "value": "bloq-while-exec"
      }
    ]
  ],
  "code": "while ({ARG1} {OPERATOR} {ARG2}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "numConversion",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "b0adaa5d-d549-49f5-9d82-2e64b32d7295"
    }
  ],
  "bloqClass": "bloq-num-conversion",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-num-conversion"
      },
      {
        "bloqInputId": "NUMBER",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "b0adaa5d-d549-49f5-9d82-2e64b32d7295"
      },
      {
        "alias": "text",
        "value": "bloq-num-conversion-to"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-num-conversion-int",
            "value": "int"
          },
          {
            "label": "bloq-num-conversion-float",
            "value": "float"
          }
        ]
      }
    ]
  ],
  "code": "({TYPE}) {NUMBER}",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringToInt",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "String"
      ],
      "name": "4f62eb6a-408d-4e59-824b-5c5cfd163410"
    }
  ],
  "bloqClass": "bloq-string-to-int",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-string-to-int"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "String"
        ],
        "name": "4f62eb6a-408d-4e59-824b-5c5cfd163410"
      }
    ]
  ],
  "code": "{VAR}.toInt()",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionDistance",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-distance"
      }
    ]
  ],
  "code": "evolution.getDistance()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionHeadAdvance",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "name": "f42e1276-fefd-4872-bfec-6bb000632eec"
    }
  ],
  "bloqClass": "bloq-evolution-head",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-head-advance"
      },
      {
        "bloqInputId": "DEGREES",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "name": "f42e1276-fefd-4872-bfec-6bb000632eec"
      },
      {
        "alias": "text",
        "value": "bloq-evolution-head-advance-deg"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-head-advance-left",
            "value": "HEAD_LEFT"
          },
          {
            "label": "bloq-evolution-head-advance-right",
            "value": "HEAD_RIGHT"
          }
        ]
      }
    ]
  ],
  "code": "'{SIDE}' === 'HEAD_LEFT'? 'evolution.turnHead({DEGREES});' : 'evolution.turnHead(-{DEGREES});'"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionLight",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-light",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-light"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-light-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-evolution-light-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-light-evolution"
      }
    ]
  ],
  "code": "evolution.getLight({SIDE})",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionLight",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-light",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-light"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-light-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-evolution-light-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-light-evolution"
      }
    ]
  ],
  "code": "evolution.getLight({SIDE})",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionLine",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-line",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-line"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-line-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-evolution-line-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-line-evolution"
      }
    ]
  ],
  "code": "evolution.getLine({SIDE})",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionBuzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-buzzer"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-buzzer-do",
            "value": "note_C4"
          },
          {
            "label": "bloq-evolution-buzzer-re",
            "value": "note_D4"
          },
          {
            "label": "bloq-evolution-buzzer-mi",
            "value": "note_E4"
          },
          {
            "label": "bloq-evolution-buzzer-fa",
            "value": "note_F4"
          },
          {
            "label": "bloq-evolution-buzzer-sol",
            "value": "note_G4"
          },
          {
            "label": "bloq-evolution-buzzer-la",
            "value": "note_A4"
          },
          {
            "label": "bloq-evolution-buzzer-si",
            "value": "note_B4"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-buzzer-for"
      },
      {
        "id": "SECONDS",
        "alias": "numberInput",
        "value": 1000
      },
      {
        "alias": "text",
        "value": "bloq-evolution-buzzer-ms"
      }
    ]
  ],
  "code": "evolution._tone({NOTE},{SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionHead",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-head",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-head"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-head-center",
            "value": "HEAD_CENTER"
          },
          {
            "label": "bloq-evolution-head-left",
            "value": "HEAD_LEFT"
          },
          {
            "label": "bloq-evolution-head-right",
            "value": "HEAD_RIGHT"
          }
        ]
      }
    ]
  ],
  "code": "evolution.turnHead({SIDE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionHome",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-rest",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-rest"
      }
    ]
  ],
  "code": "evolution.home();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "evolutionIfDistance",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-if-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-if-distance"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-distance-less",
            "value": "<"
          },
          {
            "label": "bloq-evolution-if-distance-more",
            "value": ">"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-distance-than"
      },
      {
        "id": "DISTANCE",
        "alias": "numberInput",
        "value": 15
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-distance-then"
      }
    ]
  ],
  "code": "if(evolution.getDistance() {OPERATOR} {DISTANCE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "evolutionIfLight",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-if-light",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-if-light"
      },
      {
        "id": "RANGELEFT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-light-high",
            "value": "HIGH_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-medium",
            "value": "MEDIUM_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-low",
            "value": "LOW_LIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-light-and"
      },
      {
        "id": "RANGERIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-light-high",
            "value": "HIGH_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-medium",
            "value": "MEDIUM_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-low",
            "value": "LOW_LIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-light-then"
      }
    ]
  ],
  "code": "if(evolution.getLightRange(LEFT,{RANGELEFT}) && evolution.getLightRange(RIGHT,{RANGERIGHT})){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "evolutionIfLine",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-if-line",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-if-line"
      },
      {
        "id": "LINELEFT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-line-white",
            "value": "1"
          },
          {
            "label": "bloq-evolution-if-line-black",
            "value": "0"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-line-and"
      },
      {
        "id": "LINERIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-line-white",
            "value": "1"
          },
          {
            "label": "bloq-evolution-if-line-black",
            "value": "0"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-line-then"
      }
    ]
  ],
  "code": "if(evolution.getLine(LEFT) == {LINELEFT} && evolution.getLine(RIGHT) == {LINERIGHT}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionMovementsSimple",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-movements-simple",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-movements-simple"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-movements-simple-fordward",
            "value": "fordward"
          },
          {
            "label": "bloq-evolution-movements-simple-backward",
            "value": "backward"
          },
          {
            "label": "bloq-evolution-movements-simple-right",
            "value": "right"
          },
          {
            "label": "bloq-evolution-movements-simple-left",
            "value": "left"
          }
        ]
      }
    ]
  ],
  "code": "evolution.{MOVEMENT}();"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "argument",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-argument",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-argument-var"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-argument-int",
            "value": "int"
          },
          {
            "label": "bloq-argument-float",
            "value": "float"
          },
          {
            "label": "bloq-argument-string",
            "value": "String"
          },
          {
            "label": "bloq-argument-char",
            "value": "char"
          },
          {
            "label": "bloq-argument-bool",
            "value": "bool"
          }
        ]
      },
      {
        "id": "VARNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{TYPE} {VARNAME}",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "82d37173-730f-4727-b543-08b10d082aed"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "29ebec7b-b71f-48eb-a663-654155a589f9"
    }
  ],
  "bloqClass": "bloq-arguments",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "82d37173-730f-4727-b543-08b10d082aed"
      },
      {
        "alias": "text",
        "value": ","
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "29ebec7b-b71f-48eb-a663-654155a589f9"
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{ARG1},{ARG2}",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "1dfa798b-c798-476b-b598-cc454034f3fc"
    }
  ],
  "bloqClass": "bloq-invoke-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-function-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "1dfa798b-c798-476b-b598-cc454034f3fc"
      }
    ]
  ],
  "code": "{FUNCTION}({ARGS});",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeReturnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "a9e90e24-2b92-4fdb-8b18-363657914280"
    }
  ],
  "bloqClass": "bloq-invoke-return-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-return-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-function-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "a9e90e24-2b92-4fdb-8b18-363657914280"
      }
    ]
  ],
  "code": "{FUNCTION}({ARGS})",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "return",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "44424bab-cf74-406a-a51f-727be9c0e1a0"
    }
  ],
  "bloqClass": "bloq-return",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-return-return"
      },
      {
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "44424bab-cf74-406a-a51f-727be9c0e1a0"
      }
    ]
  ],
  "code": "return {RETURN};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "13e69bf8-0f9d-4b72-92a2-74bfa859ed63"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "3a53a900-5dc6-46ff-b469-1bd0ef69bcc5"
    }
  ],
  "bloqClass": "bloq-return-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-return-function-with-arguments-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      },
      {
        "alias": "text",
        "value": "bloq-return-function-with-arguments-count"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "13e69bf8-0f9d-4b72-92a2-74bfa859ed63"
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "bloq-return-function-with-arguments-return"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "3a53a900-5dc6-46ff-b469-1bd0ef69bcc5"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "RETURN"
  },
  "arguments": {
    "type": "fromInput",
    "bloqInputId": "ARGS"
  },
  "code": "{RETURN.connectionType} {FUNCNAME} ({ARGS}) {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "b7e5f4f5-6049-42d4-949b-4f5d7214baaa"
    }
  ],
  "bloqClass": "bloq-void-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-void-function-with-arguments-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      },
      {
        "alias": "text",
        "value": "bloq-void-function-with-arguments-count"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "b7e5f4f5-6049-42d4-949b-4f5d7214baaa"
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "arguments": {
    "type": "fromInput",
    "bloqInputId": "ARGS"
  },
  "code": "void {FUNCNAME} ({ARGS}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}();",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeReturnFunction",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-invoke-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-return-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}()",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "793217a8-35c4-4671-a884-6564d41ef85d"
    }
  ],
  "bloqClass": "bloq-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-return-function-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "bloq-return-function-return"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "793217a8-35c4-4671-a884-6564d41ef85d"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "RETURN"
  },
  "code": "{RETURN.connectionType} {FUNCNAME} () {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-void-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-void-function-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "code": "void {FUNCNAME} (){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "group",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolArrayAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "10ecdfb3-dc73-4d39-96fe-38d94725ffed"
    }
  ],
  "bloqClass": "bloq-boolArray-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-boolArray-advanced-arraySize"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "10ecdfb3-dc73-4d39-96fe-38d94725ffed"
      },
      {
        "alias": "text",
        "value": "bloq-boolArray-advanced-boolType"
      }
    ]
  ],
  "code": "(bool *)malloc({VALUE}*sizeof(bool))",
  "returnType": {
    "type": "simple",
    "value": "bool *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolArray",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-boolArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-boolArray-arraySize"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-boolArray-boolType"
      }
    ]
  ],
  "code": "(bool *)malloc({VALUE}*sizeof(bool))",
  "returnType": {
    "type": "simple",
    "value": "bool *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolean",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-boolean",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-boolean-true",
            "value": "true"
          },
          {
            "label": "bloq-boolean-false",
            "value": "false"
          }
        ]
      }
    ]
  ],
  "code": "{STATE}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "equalityOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "d263e42b-a344-40e1-b8c3-1245b1d1810c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "6cc5e2ce-16f0-41ca-a3ec-f820732635c4"
    }
  ],
  "bloqClass": "bloq-equality-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "d263e42b-a344-40e1-b8c3-1245b1d1810c"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "6cc5e2ce-16f0-41ca-a3ec-f820732635c4"
      }
    ]
  ],
  "code": "({ARG1} {OPERATOR} {ARG2})",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "logicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "2ab3da49-c15d-41e7-9ff3-ff2dddeb14f9"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "af813030-63f6-4f09-bb7c-07c1eac037c7"
    }
  ],
  "bloqClass": "bloq-logic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "2ab3da49-c15d-41e7-9ff3-ff2dddeb14f9"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-logic-operations-and",
            "value": "&&"
          },
          {
            "label": "bloq-logic-operations-or",
            "value": "||"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "af813030-63f6-4f09-bb7c-07c1eac037c7"
      }
    ]
  ],
  "code": "({ARG1} {OPERATOR} {ARG2})",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "not",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "d1088ed8-443e-4a46-989e-f75ade9c4331"
    }
  ],
  "bloqClass": "bloq-not",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-not-not"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "d1088ed8-443e-4a46-989e-f75ade9c4331"
      }
    ]
  ],
  "code": "!{CONDITION}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "name": "loopBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-loop",
  "headerText": "bloq-loop-header",
  "descriptionText": "bloq-loop-description",
  "content": [],
  "code": "void loop(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "setupBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-setup",
  "headerText": "bloq-setup-header",
  "descriptionText": "bloq-setup-description",
  "content": [],
  "code": "void setup(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "varsBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-vars",
  "headerText": "bloq-var-header",
  "descriptionText": "bloq-var-description",
  "content": [],
  "code": "{STATEMENTS}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mapAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "name": "78fd3047-62e2-4781-9c38-85b1e549eeaf"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "name": "bb3e2796-602d-44e4-951b-135a47c4ae60"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "name": "44b3ffc5-6ab4-4d7a-85bd-59d483a97129"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "name": "d3218ca7-b22b-4998-bb64-1e9e65be7346"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "name": "6b7a6366-fb18-4df4-8c9b-375f914f145f"
    }
  ],
  "bloqClass": "bloq-map-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-map-advanced-map"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "name": "78fd3047-62e2-4781-9c38-85b1e549eeaf"
      },
      {
        "alias": "text",
        "value": "bloq-map-advanced-value"
      },
      {
        "bloqInputId": "INITMIN",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "name": "bb3e2796-602d-44e4-951b-135a47c4ae60"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "INITMAX",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "name": "44b3ffc5-6ab4-4d7a-85bd-59d483a97129"
      },
      {
        "alias": "text",
        "value": "bloq-map-advanced-and"
      },
      {
        "bloqInputId": "FINMIN",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "name": "d3218ca7-b22b-4998-bb64-1e9e65be7346"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "FINMAX",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "name": "6b7a6366-fb18-4df4-8c9b-375f914f145f"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},{INITMIN},{INITMAX},{FINMIN},{FINMAX})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mathOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "c5f8dbe1-fa3b-471e-a317-b08a54febe50"
    }
  ],
  "bloqClass": "bloq-math-operations",
  "content": [
    [
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-math-operations-sqrt",
            "value": "sqrt"
          },
          {
            "label": "bloq-math-operations-abs",
            "value": "abs"
          },
          {
            "label": "ln",
            "value": "log"
          },
          {
            "label": "log10",
            "value": "log10"
          },
          {
            "label": "e^",
            "value": "exp"
          }
        ]
      },
      {
        "bloqInputId": "ARG",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "c5f8dbe1-fa3b-471e-a317-b08a54febe50"
      }
    ]
  ],
  "code": "{OPERATOR}({ARG})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "numberArrayAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "0532f0c8-e542-43c9-b743-3632baae3b39"
    }
  ],
  "bloqClass": "bloq-numberArray-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-numberArray-advanced-arraySize"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "0532f0c8-e542-43c9-b743-3632baae3b39"
      },
      {
        "alias": "text",
        "value": "bloq-numberArray-advanced-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-numberArray-advanced-float",
            "value": "float *"
          },
          {
            "label": "bloq-numberArray-advanced-int",
            "value": "int *"
          }
        ]
      }
    ]
  ],
  "code": "({TYPE})malloc({VALUE}*sizeof({TYPE.withoutAsterisk}))",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "basicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "10816ac6-bc9e-4cf2-a29d-b26983abf3c4"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "43bb981c-ab68-44e4-8be2-b42d0dafa6cc"
    }
  ],
  "bloqClass": "bloq-basic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "10816ac6-bc9e-4cf2-a29d-b26983abf3c4"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "+",
            "value": "+"
          },
          {
            "label": "-",
            "value": "-"
          },
          {
            "label": "x",
            "value": "*"
          },
          {
            "label": "/",
            "value": "/"
          },
          {
            "label": "^",
            "value": "^"
          },
          {
            "label": "%",
            "value": "%"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "43bb981c-ab68-44e4-8be2-b42d0dafa6cc"
      }
    ]
  ],
  "code": "'{OPERATOR}' === '^'? 'pow({ARG1},{ARG2})' : '({ARG1} {OPERATOR} {ARG2})'",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "map",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "name": "7a8961f5-5c79-4030-8416-f5be48eb74c7"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "name": "a4fd86a7-6098-4964-ad18-3d02ac9ff349"
    }
  ],
  "bloqClass": "bloq-map",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-map-map"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "name": "7a8961f5-5c79-4030-8416-f5be48eb74c7"
      },
      {
        "alias": "text",
        "value": "bloq-map-value"
      },
      {
        "bloqInputId": "MAXVAL",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "name": "a4fd86a7-6098-4964-ad18-3d02ac9ff349"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},0,1023,0,{MAXVAL})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "number",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-number",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "numberArray",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-numberArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-numberArray-arraySize"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 3
      },
      {
        "alias": "text",
        "value": "bloq-numberArray-floatType"
      }
    ]
  ],
  "code": "(float*)malloc({VALUE}*sizeof(float))",
  "returnType": {
    "type": "simple",
    "value": "float *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "random",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "name": "040e15c8-ceab-412b-b330-fcfc5bc37978"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "float"
      ],
      "name": "1bdea152-d856-4b15-bf43-5bbcadb012f6"
    }
  ],
  "bloqClass": "bloq-random",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-random-random"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "name": "040e15c8-ceab-412b-b330-fcfc5bc37978"
      },
      {
        "alias": "text",
        "value": "bloq-random-and"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "float"
        ],
        "name": "1bdea152-d856-4b15-bf43-5bbcadb012f6"
      }
    ]
  ],
  "code": "random({ARG1},{ARG2}+1)",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "randomSeed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-random-seed",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-random-seed"
      }
    ]
  ],
  "code": "randomSeed(micros());",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "output",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "statement",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "statement-input",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "char",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-string",
  "content": [
    [
      {
        "alias": "text",
        "value": "'"
      },
      {
        "id": "TEXT",
        "alias": "charInput",
        "placeholder": "bloq-char"
      },
      {
        "alias": "text",
        "value": "'"
      }
    ]
  ],
  "code": "'{TEXT}'",
  "returnType": {
    "type": "simple",
    "value": "char"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringArrayAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "a1adea8f-a744-425e-8813-971ef3ddc87b"
    }
  ],
  "bloqClass": "bloq-stringArray-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-stringArray-advanced-arraySize"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "a1adea8f-a744-425e-8813-971ef3ddc87b"
      },
      {
        "alias": "text",
        "value": "bloq-stringArray-advanced-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-stringArray-advanced-string",
            "value": "String *"
          },
          {
            "label": "bloq-stringArray-advanced-char",
            "value": "char *"
          }
        ]
      }
    ]
  ],
  "code": "({TYPE})malloc({VALUE}*sizeof({TYPE.withoutAsterisk}))",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "length",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "String"
      ],
      "name": "8f78e463-6eef-4b4f-8391-9ce53d03bc38"
    }
  ],
  "bloqClass": "bloq-length",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-length-length"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": [
          "String"
        ],
        "name": "8f78e463-6eef-4b4f-8391-9ce53d03bc38"
      }
    ]
  ],
  "code": "{TEXT}.length()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "string",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-string",
  "content": [
    [
      {
        "alias": "text",
        "value": "\""
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "placeholder": "bloq-string-string"
      },
      {
        "alias": "text",
        "value": "\""
      }
    ]
  ],
  "code": "\"{TEXT}\"",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringArray",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-stringArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-stringArray-arraySize"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 3
      },
      {
        "alias": "text",
        "value": "bloq-stringArray-stringType"
      }
    ]
  ],
  "code": "(String *)malloc({VALUE}*sizeof(String))",
  "returnType": {
    "type": "simple",
    "value": "String *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringCreate",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "4917f064-fc2e-4f5b-82df-16b7afaee901"
    }
  ],
  "bloqClass": "bloq-string-create",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-string-create-create"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "4917f064-fc2e-4f5b-82df-16b7afaee901"
      }
    ]
  ],
  "code": "String({TEXT})",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringSum",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "String"
      ],
      "name": "1d383ee4-37f5-4f46-9fee-23d3f6458872"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "String"
      ],
      "name": "c4419591-d55d-473e-848d-9e5edb9641fb"
    }
  ],
  "bloqClass": "bloq-string-sum",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": [
          "String"
        ],
        "name": "1d383ee4-37f5-4f46-9fee-23d3f6458872"
      },
      {
        "alias": "text",
        "value": "+"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": [
          "String"
        ],
        "name": "c4419591-d55d-473e-848d-9e5edb9641fb"
      }
    ]
  ],
  "code": "String({ARG1})+String({ARG2})",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayVariableAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "1562121e-5e00-4a89-905e-5144b04568d8"
    }
  ],
  "bloqClass": "bloq-array-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-array-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "bloqInputId": "POSITION",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "1562121e-5e00-4a89-905e-5144b04568d8"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "{VAR}[{POSITION}]",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "pointer": "true",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareVariableAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "ac9fa09d-01c6-4812-9379-6335af75bf18"
    }
  ],
  "bloqClass": "bloq-declare-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-declare-variable-declare"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      },
      {
        "alias": "text",
        "value": "bloq-declare-variable-declare-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-declare-variable-declare-type-int",
            "value": "int"
          },
          {
            "label": "bloq-declare-variable-declare-type-float",
            "value": "float"
          },
          {
            "label": "bloq-declare-variable-declare-type-text",
            "value": "String"
          },
          {
            "label": "bloq-declare-variable-declare-type-char",
            "value": "char"
          },
          {
            "label": "bloq-declare-variable-declare-type-bool",
            "value": "bool"
          }
        ]
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "ac9fa09d-01c6-4812-9379-6335af75bf18"
      }
    ]
  ],
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE"
  },
  "createDynamicContent": "softwareVars",
  "code": "{TYPE} {NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hwVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-hw-variable-advanced-variable"
      },
      {
        "id": "COMPONENT",
        "alias": "dynamicDropdown",
        "options": "varComponents"
      }
    ]
  ],
  "code": "{COMPONENT}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "COMPONENT",
    "options": "varComponents"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setArrayVariableAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "e0f6a3cd-7d2c-45e5-8a0f-c0207f19e33e"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "04017064-a26c-43a5-ace7-122db4f0f668"
    }
  ],
  "bloqClass": "bloq-set-variableArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-variableArray-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "bloqInputId": "ITERATOR",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "e0f6a3cd-7d2c-45e5-8a0f-c0207f19e33e"
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "04017064-a26c-43a5-ace7-122db4f0f668"
      }
    ]
  ],
  "code": "{NAME}[{ITERATOR}] = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-array-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-array-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "{VAR}[{POSITION}]",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "pointer": "true",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": [
        "all"
      ],
      "name": "af852493-d0f8-4943-919d-40627606c771"
    }
  ],
  "bloqClass": "bloq-declare-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-declare-variable-declare"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-name-default"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": [
          "all"
        ],
        "name": "af852493-d0f8-4943-919d-40627606c771"
      }
    ]
  ],
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "VALUE"
  },
  "createDynamicContent": "softwareVars",
  "code": "{VALUE.connectionType} {NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "swVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-sw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-sw-variable-advanced-variable"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "selectVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-select-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-select-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VAR}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setArrayVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "pointer": "true",
        "options": "softwareVars"
      },
      "name": "d0c23dcc-fd4c-49d7-abc8-d2dcd946b2b3"
    }
  ],
  "bloqClass": "bloq-set-variableArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-variableArray-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "ITERATOR",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "pointer": "true",
          "options": "softwareVars"
        },
        "name": "d0c23dcc-fd4c-49d7-abc8-d2dcd946b2b3"
      }
    ]
  ],
  "code": "{NAME}[{ITERATOR}] = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "options": "softwareVars"
      },
      "name": "b9746881-0949-44a1-b97d-b90cc276a376"
    }
  ],
  "bloqClass": "bloq-set-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-variable-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "options": "softwareVars"
        },
        "name": "b9746881-0949-44a1-b97d-b90cc276a376"
      }
    ]
  ],
  "code": "{NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "zowiButtons",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-zowi-buttons",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-buttons"
      },
      {
        "id": "BUTTON",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-buttons-A",
            "value": "PIN_AButton"
          },
          {
            "label": "bloq-zowi-buttons-B",
            "value": "PIN_BButton"
          }
        ]
      }
    ]
  ],
  "code": "digitalRead({BUTTON})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "zowiDistance",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-zowi-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-distance-v1"
      }
    ]
  ],
  "code": "zowi.getDistance()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsFront",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-front",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-simple-walk-v1"
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-backward",
            "value": "BACKWARD"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-endtext"
      }
    ]
  ],
  "code": "zowi.walk({STEPS},{SPEED},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsHeightFront",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-height-front",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-simple-flapping-v1"
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-height-backward",
            "value": "BACKWARD"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-endtext"
      }
    ]
  ],
  "code": "zowi.flapping({STEPS},{SPEED},{HEIGHT},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsHeightSides",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-height-sides",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-simple-moonwalker-v1",
            "value": "moonwalker"
          },
          {
            "label": "bloq-zowi-movements-simple-crusaito-v1",
            "value": "crusaito"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-height-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsNoDir-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-no-dir-v1",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-simple-updown-v1",
            "value": "updown"
          },
          {
            "label": "bloq-zowi-movements-simple-swing-v1",
            "value": "swing"
          },
          {
            "label": "bloq-zowi-movements-simple-tiptoeSwing-v1",
            "value": "tiptoeSwing"
          },
          {
            "label": "bloq-zowi-movements-simple-jitter-v1",
            "value": "jitter"
          },
          {
            "label": "bloq-zowi-movements-simple-ascendingTurn-v1",
            "value": "ascendingTurn"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsSides",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-sides",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-simple-turn-v1",
            "value": "turn"
          },
          {
            "label": "bloq-zowi-movements-simple-shakeLeg-v1",
            "value": "shakeLeg"
          },
          {
            "label": "bloq-zowi-movements-simple-bend-v1",
            "value": "bend"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "zowiSound",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-zowi-sound",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-sound-v1"
      }
    ]
  ],
  "code": "zowi.getNoise()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovements",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-walk",
            "value": "walk"
          },
          {
            "label": "bloq-zowi-movements-turn",
            "value": "turn"
          },
          {
            "label": "bloq-zowi-movements-shakeLeg",
            "value": "shakeLeg"
          },
          {
            "label": "bloq-zowi-movements-bend",
            "value": "bend"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-backward",
            "value": "BACKWARD"
          },
          {
            "label": "bloq-zowi-movements-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsHeight",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-height",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-moonwalker",
            "value": "moonwalker"
          },
          {
            "label": "bloq-zowi-movements-height-crusaito",
            "value": "crusaito"
          },
          {
            "label": "bloq-zowi-movements-height-flapping",
            "value": "flapping"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-height-backward",
            "value": "BACKWARD"
          },
          {
            "label": "bloq-zowi-movements-height-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-height-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsNoDir",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-no-dir",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-no-dir-updown",
            "value": "updown"
          },
          {
            "label": "bloq-zowi-movements-no-dir-swing",
            "value": "swing"
          },
          {
            "label": "bloq-zowi-movements-no-dir-tiptoeSwing",
            "value": "tiptoeSwing"
          },
          {
            "label": "bloq-zowi-movements-no-dir-jitter",
            "value": "jitter"
          },
          {
            "label": "bloq-zowi-movements-no-dir-ascendingTurn",
            "value": "ascendingTurn"
          },
          {
            "label": "bloq-zowi-movements-no-dir-jump",
            "value": "jump"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiGestures",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-gestures",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-gestures-v1"
      },
      {
        "id": "GESTURE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-gestures-ZowiHappy-v1",
            "value": "ZowiHappy"
          },
          {
            "label": "bloq-zowi-gestures-ZowiSuperHappy-v1",
            "value": "ZowiSuperHappy"
          },
          {
            "label": "bloq-zowi-gestures-ZowiSad-v1",
            "value": "ZowiSad"
          },
          {
            "label": "bloq-zowi-gestures-ZowiSleeping-v1",
            "value": "ZowiSleeping"
          },
          {
            "label": "bloq-zowi-gestures-ZowiFart-v1",
            "value": "ZowiFart"
          },
          {
            "label": "bloq-zowi-gestures-ZowiConfused-v1",
            "value": "ZowiConfused"
          },
          {
            "label": "bloq-zowi-gestures-ZowiLove-v1",
            "value": "ZowiLove"
          },
          {
            "label": "bloq-zowi-gestures-ZowiAngry-v1",
            "value": "ZowiAngry"
          },
          {
            "label": "bloq-zowi-gestures-ZowiFretful-v1",
            "value": "ZowiFretful"
          },
          {
            "label": "bloq-zowi-gestures-ZowiVictory-v1",
            "value": "ZowiVictory"
          },
          {
            "label": "bloq-zowi-gestures-ZowiFail-v1",
            "value": "ZowiFail"
          }
        ]
      }
    ]
  ],
  "code": "zowi.playGesture({GESTURE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiHome",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-rest",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-rest-v1"
      }
    ]
  ],
  "code": "zowi.home();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "zowiIfButtons",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-if-buttons",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-if-buttons"
      },
      {
        "id": "BUTTON",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "A",
            "value": "PIN_AButton"
          },
          {
            "label": "B",
            "value": "PIN_BButton"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-if-buttons-then-v1"
      }
    ]
  ],
  "code": "if(digitalRead({BUTTON}) == 1){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "zowiIfDistance",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-if-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-if-distance"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-if-distance-less",
            "value": "<"
          },
          {
            "label": "bloq-zowi-if-distance-more",
            "value": ">"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-if-distance-than"
      },
      {
        "id": "DISTANCE",
        "alias": "numberInput",
        "value": 15
      },
      {
        "alias": "text",
        "value": "bloq-zowi-if-distance-then-v1"
      }
    ]
  ],
  "code": "if(zowi.getDistance() {OPERATOR} {DISTANCE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "zowiIfSound",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-if-sound",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-if-sound-v1"
      }
    ]
  ],
  "code": " if(zowi.getNoise() >= 650){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMouth",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-mouth",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-mouth-v1"
      },
      {
        "id": "GESTURE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-mouth-smile",
            "value": "smile_code"
          },
          {
            "label": "bloq-zowi-mouth-sad",
            "value": "sad_code"
          },
          {
            "label": "bloq-zowi-mouth-happy",
            "value": "happyOpen_code"
          },
          {
            "label": "bloq-zowi-mouth-confused",
            "value": "confused_code"
          },
          {
            "label": "bloq-zowi-mouth-bigSurprise",
            "value": "bigSurprise_code"
          },
          {
            "label": "bloq-zowi-mouth-tongueOut",
            "value": "tongueOut_code"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-mouth-mouth"
      }
    ]
  ],
  "code": "zowi.putMouth({GESTURE}, false);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsSimple",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-simple",
  "content": [
    [
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-simple-walk-v1",
            "value": "walk"
          },
          {
            "label": "bloq-zowi-movements-simple-turn-v1",
            "value": "turn"
          },
          {
            "label": "bloq-zowi-movements-simple-shakeLeg-v1",
            "value": "shakeLeg"
          },
          {
            "label": "bloq-zowi-movements-simple-bend-v1",
            "value": "bend"
          },
          {
            "label": "bloq-zowi-movements-simple-moonwalker-v1",
            "value": "moonwalker"
          },
          {
            "label": "bloq-zowi-movements-simple-crusaito-v1",
            "value": "crusaito"
          },
          {
            "label": "bloq-zowi-movements-simple-flapping-v1",
            "value": "flapping"
          },
          {
            "label": "bloq-zowi-movements-simple-updown-v1",
            "value": "updown"
          },
          {
            "label": "bloq-zowi-movements-simple-swing-v1",
            "value": "swing"
          },
          {
            "label": "bloq-zowi-movements-simple-tiptoeSwing-v1",
            "value": "tiptoeSwing"
          },
          {
            "label": "bloq-zowi-movements-simple-jitter-v1",
            "value": "jitter"
          },
          {
            "label": "bloq-zowi-movements-simple-ascendingTurn-v1",
            "value": "ascendingTurn"
          },
          {
            "label": "bloq-zowi-movements-simple-jump-v1",
            "value": "jump"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-simple-steps"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiSounds",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-sounds",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-sounds-v1"
      },
      {
        "id": "SOUND",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-sounds-surprise",
            "value": "S_surprise"
          },
          {
            "label": "bloq-zowi-sounds-OhOoh",
            "value": "S_OhOoh"
          },
          {
            "label": "bloq-zowi-sounds-cuddly",
            "value": "S_cuddly"
          },
          {
            "label": "bloq-zowi-sounds-sleeping",
            "value": "S_sleeping"
          },
          {
            "label": "bloq-zowi-sounds-happy",
            "value": "S_happy"
          },
          {
            "label": "bloq-zowi-sounds-sad",
            "value": "S_sad"
          },
          {
            "label": "bloq-zowi-sounds-confused",
            "value": "S_confused"
          },
          {
            "label": "bloq-zowi-sounds-fart1-v1",
            "value": "S_fart1"
          }
        ]
      }
    ]
  ],
  "code": "zowi.sing({SOUND});"
});
